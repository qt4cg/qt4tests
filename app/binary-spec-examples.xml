<?xml version="1.0" encoding="UTF-8"?>
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="app-spec-examples">
   <description>Tests the example code in the F+O 4.0 specification</description>
   <environment name="global">
      <namespace prefix="math" uri="http://www.w3.org/2005/xpath-functions/math"/>
      <namespace prefix="map" uri="http://www.w3.org/2005/xpath-functions/map"/>
      <namespace prefix="array" uri="http://www.w3.org/2005/xpath-functions/array"/>
      <decimal-format name="ch" decimal-separator="·" grouping-separator="ʹ"/>
      <decimal-format name="de" decimal-separator="," grouping-separator="."/>
      <decimal-format name="fortran" exponent-separator="E"/>
   </environment>
   <dependency type="spec" value="XP40+ XQ40+" satisfied="true"/>

   <test-case name="fo-test-bin-to-octets-001">
      <description>Test case for bin:to-octets</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:to-octets(bin:hex('1122AAFF')
      </test>
      <result>
         <assert-deep-eq>17, 34, 170, 255</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-to-octets-002">
      <description>Test case for bin:to-octets</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:to-octets(bin:hex(''))
      </test>
      <result>
         <assert-deep-eq>()</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-from-octets-001">
      <description>Test case for bin:from-octets</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:from-octets((17, 34, 170, 255))
      </test>
      <result>
         <assert-deep-eq>bin:hex('1122AAFF')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-from-octets-002">
      <description>Test case for bin:from-octets</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:from-octets(())
      </test>
      <result>
         <assert-deep-eq>bin:hex('')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-hex-001">
      <description>Test case for bin:hex</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:hex('1122_3F4E')
      </test>
      <result>
         <assert-deep-eq>xs:base64Binary("ESI/Tg==")</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-hex-002">
      <description>Test case for bin:hex</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:hex('122 3F4E')
      </test>
      <result>
         <assert-deep-eq>xs:base64Binary("ASI/Tg==")</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-bin-001">
      <description>Test case for bin:bin</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:bin('1101_0001_1101_0101')
      </test>
      <result>
         <assert-deep-eq>bin:hex("D1D5")</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-bin-002">
      <description>Test case for bin:bin</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:bin('1 0001 1101 0101')
      </test>
      <result>
         <assert-deep-eq>bin:hex("11D5")</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-bin-003">
      <description>Test case for bin:bin</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:bin(' 101 ')
      </test>
      <result>
         <assert-deep-eq>bin:hex("05")</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-octal-001">
      <description>Test case for bin:octal</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:octal('')
      </test>
      <result>
         <assert-deep-eq>bin:hex('')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-octal-002">
      <description>Test case for bin:octal</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:octal('0')
      </test>
      <result>
         <assert-deep-eq>bin:hex('00')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-octal-003">
      <description>Test case for bin:octal</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:octal('377')
      </test>
      <result>
         <assert-deep-eq>bin:hex('FF')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-octal-004">
      <description>Test case for bin:octal</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:octal('777')
      </test>
      <result>
         <assert-deep-eq>bin:hex('01FF')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-octal-005">
      <description>Test case for bin:octal</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:octal('0377')
      </test>
      <result>
         <assert-deep-eq>bin:hex('00FF')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-octal-006">
      <description>Test case for bin:octal</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:octal('11_223_047')
      </test>
      <result>
         <assert-deep-eq>bin:hex('252627')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-part-001">
      <description>Test case for bin:part</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:part(bin:hex('11223344556677'), 0, 4)
      </test>
      <result>
         <assert-deep-eq>bin:hex('11223344')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-part-002">
      <description>Test case for bin:part</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:part(bin:hex('11223344556677'), 4)
      </test>
      <result>
         <assert-deep-eq>bin:hex('556677')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-part-003">
      <description>Test case for bin:part</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:part(bin:hex('11223344556677'), 7)
      </test>
      <result>
         <assert-deep-eq>bin:hex('')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-part-004">
      <description>Test case for bin:part</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:part(bin:hex('11223344556677'), 5, 0)
      </test>
      <result>
         <assert-deep-eq>bin:hex('')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-insert-before-001">
      <description>Test case for bin:insert-before</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:insert-before(bin:hex('FFFF'), 1, bin:hex('00'))
      </test>
      <result>
         <assert-deep-eq>bin:hex('FF00FF')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-insert-before-002">
      <description>Test case for bin:insert-before</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:insert-before(bin:hex('FFFF'), 0, bin:hex('00'))
      </test>
      <result>
         <assert-deep-eq>bin:hex('00FFFF')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-insert-before-003">
      <description>Test case for bin:insert-before</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:insert-before(bin:hex('FFFF'), 2, bin:hex('00'))
      </test>
      <result>
         <assert-deep-eq>bin:hex('FFFF00')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-length-001">
      <description>Test case for bin:length</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:length(bin:hex('FFFF'))
      </test>
      <result>
         <assert-deep-eq>2</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-length-002">
      <description>Test case for bin:length</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:length(bin:hex(''))
      </test>
      <result>
         <assert-deep-eq>0</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-join-001">
      <description>Test case for bin:join</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:join((bin:hex('0000'), bin:hex('FFFF'), bin:hex('0000'))
      </test>
      <result>
         <assert-deep-eq>bin:hex('0000FFFF0000')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-join-002">
      <description>Test case for bin:join</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:join(())
      </test>
      <result>
         <assert-deep-eq>bin:hex('')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-join-003">
      <description>Test case for bin:join</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:join( (1 to 4) ! bin:hex('F0') )
      </test>
      <result>
         <assert-deep-eq>bin:hex('F0F0F0F0')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-pad-left-001">
      <description>Test case for bin:pad-left</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:pad-left(bin:hex('FFFF'), 3)
      </test>
      <result>
         <assert-deep-eq>bin:hex('000000FFFF')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-pad-left-002">
      <description>Test case for bin:pad-left</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:pad-left(bin:hex('0000'), 3, 255)
      </test>
      <result>
         <assert-deep-eq>bin:hex('FFFFFF0000')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-pad-left-003">
      <description>Test case for bin:pad-left</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:pad-left(bin:hex(''), 8)
      </test>
      <result>
         <assert-deep-eq>bin:hex('0000000000000000')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-pad-right-001">
      <description>Test case for bin:pad-right</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:pad-right(bin:hex('FFFF'), 3)
      </test>
      <result>
         <assert-deep-eq>bin:hex('FFFF000000')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-pad-right-002">
      <description>Test case for bin:pad-right</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:pad-right(bin:hex('0000'), 3, 255)
      </test>
      <result>
         <assert-deep-eq>bin:hex('0000FFFFFF')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-pad-right-003">
      <description>Test case for bin:pad-right</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:pad-right(bin:hex(''), 8)
      </test>
      <result>
         <assert-deep-eq>bin:hex('0000000000000000')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-find-001">
      <description>Test case for bin:find</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:find((bin:hex('AABBCCDD'), 0, bin:hex('DD'))
      </test>
      <result>
         <assert-deep-eq>3</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-find-002">
      <description>Test case for bin:find</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:find((bin:hex('AABBCCDD'), 0, bin:hex('FF'))
      </test>
      <result>
         <assert-deep-eq>()</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-find-003">
      <description>Test case for bin:find</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:find((bin:hex('AABBCCDDBBCC'), 2, bin:hex('BBCC'))
      </test>
      <result>
         <assert-deep-eq>4</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-find-004">
      <description>Test case for bin:find</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:find((bin:hex('AABBCCDD'), 2, bin:hex(''))
      </test>
      <result>
         <assert-deep-eq>2</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-decode-string-001">
      <description>Test case for bin:decode-string</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:decode-string(bin:hex('41 42 43'))
      </test>
      <result>
         <assert-deep-eq>"ABC"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-decode-string-002">
      <description>Test case for bin:decode-string</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:decode-string(bin:hex('EFBBBF 41 42 43'))
      </test>
      <result>
         <assert-deep-eq>"ABC"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-decode-string-003">
      <description>Test case for bin:decode-string</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:decode-string(bin:hex('FEFF 0041 0042 0043'))
      </test>
      <result>
         <assert-deep-eq>"ABC"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-decode-string-004">
      <description>Test case for bin:decode-string</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:decode-string(bin:hex('FFFE 4100 4200 4300'))
      </test>
      <result>
         <assert-deep-eq>"ABC"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-decode-string-005">
      <description>Test case for bin:decode-string</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:decode-string(bin:hex('41 42 43'), offset := 1)
      </test>
      <result>
         <assert-deep-eq>"BC"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-decode-string-006">
      <description>Test case for bin:decode-string</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:decode-string(bin:hex('41 42 43'), offset := 1, size := 1)
      </test>
      <result>
         <assert-deep-eq>"B"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-decode-string-007">
      <description>Test case for bin:decode-string</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:decode-string(bin:hex('41 42 43 44'), (), 3)
      </test>
      <result>
         <assert-deep-eq>"D"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-decode-string-008">
      <description>Test case for bin:decode-string</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:decode-string(bin:hex('41 42 43 44'), 'utf-8', 3)
      </test>
      <result>
         <assert-deep-eq>"D"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-decode-string-009">
      <description>Test case for bin:decode-string</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:decode-string(bin:hex('EFBBBF 41 42 43 44'), (), 3)
      </test>
      <result>
         <assert-deep-eq>"ABCD"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-decode-string-010">
      <description>Test case for bin:decode-string</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:decode-string(bin:hex('EFBBBF 41 42 43 44'), 'utf-8', 3)
      </test>
      <result>
         <assert-deep-eq>"ABCD"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-encode-string-001">
      <description>Test case for bin:encode-string</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:encode-string('ABC')
      </test>
      <result>
         <assert-deep-eq>bin:hex('414243')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-encode-string-002">
      <description>Test case for bin:encode-string</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:encode-string('ABC', 'utf-16')
      </test>
      <result>
         <assert-deep-eq>bin:hex('004100420043')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-encode-string-003">
      <description>Test case for bin:encode-string</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:encode-string(char(0xfeff) || 'ABC', 'utf-16le')
      </test>
      <result>
         <assert-deep-eq>bin:hex('fffe410042004300')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-pack-integer-001">
      <description>Test case for bin:pack-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:pack-integer(256, 2)
      </test>
      <result>
         <assert-deep-eq>bin:hex('0100')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-pack-integer-002">
      <description>Test case for bin:pack-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:pack-integer(256, 4)
      </test>
      <result>
         <assert-deep-eq>bin:hex('00000100')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-pack-integer-003">
      <description>Test case for bin:pack-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:pack-integer(65536, 2)
      </test>
      <result>
         <assert-deep-eq>bin:hex('0000')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-pack-integer-004">
      <description>Test case for bin:pack-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:pack-integer(256, 2, "LE")
      </test>
      <result>
         <assert-deep-eq>bin:hex('0001')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-pack-integer-005">
      <description>Test case for bin:pack-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:pack-integer(-1, 2)
      </test>
      <result>
         <assert-deep-eq>bin:hex('FFFF')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-pack-integer-006">
      <description>Test case for bin:pack-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:pack-integer(-2, 4)
      </test>
      <result>
         <assert-deep-eq>bin:hex('FFFFFFFE')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-pack-integer-007">
      <description>Test case for bin:pack-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:pack-integer(-2, 4, 'LE')
      </test>
      <result>
         <assert-deep-eq>bin:hex('FEFFFFFF')</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-unpack-integer-001">
      <description>Test case for bin:unpack-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:unpack-integer(bin:hex('0100'), 0, 2)
      </test>
      <result>
         <assert-deep-eq>256</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-unpack-integer-002">
      <description>Test case for bin:unpack-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:unpack-integer(bin:hex('00000100'), 0, 4)
      </test>
      <result>
         <assert-deep-eq>256</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-unpack-integer-003">
      <description>Test case for bin:unpack-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:unpack-integer(bin:hex('FFFF'), 0, 2)
      </test>
      <result>
         <assert-deep-eq>-1</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-unpack-integer-004">
      <description>Test case for bin:unpack-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:unpack-integer(bin:hex('00FFFFFFFF'), 1, 4)
      </test>
      <result>
         <assert-deep-eq>-1</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-unpack-integer-005">
      <description>Test case for bin:unpack-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:unpack-integer(bin:hex('FEFF'), 0, 2, "LE")
      </test>
      <result>
         <assert-deep-eq>-2</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-unpack-unsigned-integer-001">
      <description>Test case for bin:unpack-unsigned-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:unpack-unsigned-integer(bin:hex('0100'), 0, 2)
      </test>
      <result>
         <assert-deep-eq>256</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-unpack-unsigned-integer-002">
      <description>Test case for bin:unpack-unsigned-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:unpack-unsigned-integer(bin:hex('00000100'), 0, 4)
      </test>
      <result>
         <assert-deep-eq>256</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-unpack-unsigned-integer-003">
      <description>Test case for bin:unpack-unsigned-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:unpack-unsigned-integer(bin:hex('FFFF'), 0, 2)
      </test>
      <result>
         <assert-deep-eq>65535</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-unpack-unsigned-integer-004">
      <description>Test case for bin:unpack-unsigned-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:unpack-unsigned-integer(bin:hex('00FFFFFFFF'), 1, 4)
      </test>
      <result>
         <assert-deep-eq>4294967295</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-unpack-unsigned-integer-005">
      <description>Test case for bin:unpack-unsigned-integer</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:unpack-integer(bin:hex('FEFF'), 0, 2, "LE")
      </test>
      <result>
         <assert-deep-eq>65279</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-bin-shift-001">
      <description>Test case for bin:shift</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        bin:shift(bin:hex("000001"), 17)
      </test>
      <result>
         <assert-deep-eq>bin:hex("020000")</assert-deep-eq>
      </result>
   </test-case>
</test-set>
