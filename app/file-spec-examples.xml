<?xml version="1.0" encoding="UTF-8"?>
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<!--DO NOT EDIT: GENERATED BY generate-qt3-test-set.xsl-->
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="app-spec-examples">
   <description>Tests the example code in the F+O 4.0 specification</description>
   <environment name="global">
      <namespace prefix="math" uri="http://www.w3.org/2005/xpath-functions/math"/>
      <namespace prefix="map" uri="http://www.w3.org/2005/xpath-functions/map"/>
      <namespace prefix="array" uri="http://www.w3.org/2005/xpath-functions/array"/>
      <decimal-format name="ch" decimal-separator="·" grouping-separator="ʹ"/>
      <decimal-format name="de" decimal-separator="," grouping-separator="."/>
      <decimal-format name="fortran" exponent-separator="E"/>
   </environment>
   <dependency type="spec" value="XP40+ XQ40+" satisfied="true"/>

   <test-case name="fo-test-file-exists-001">
      <description>Test case for file:exists</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:exists('.')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fo-test-file-exists-002">
      <description>Test case for file:exists</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:exists('/')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fo-test-file-is-dir-001">
      <description>Test case for file:is-dir</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:is-dir('.')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fo-test-file-is-dir-002">
      <description>Test case for file:is-dir</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:is-dir('/')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fo-test-file-is-file-001">
      <description>Test case for file:is-file</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:is-file('.')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="fo-test-file-is-file-002">
      <description>Test case for file:is-file</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:is-file('/')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="fo-test-file-is-absolute-001">
      <description>Test case for file:is-absolute</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:is-absolute('/')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fo-test-file-last-modified-001">
      <description>Test case for file:last-modified</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:last-modified('.')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-last-modified-002">
      <description>Test case for file:last-modified</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:last-modified(file:base-dir())
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-size-001">
      <description>Test case for file:size</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:size('.')
      </test>
      <result>
         <assert-deep-eq>0</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-size-002">
      <description>Test case for file:size</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:size('/')
      </test>
      <result>
         <assert-deep-eq>0</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-append-001">
      <description>Test case for file:append</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <dependency type="spec" value="XQ40+" satisfied="true"/>
      <test>
        file:append('fragments.xml', &lt;fragment/&gt;)
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-append-002">
      <description>Test case for file:append</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:append('snippets.json', { 'one': 1 }, { 'method': 'json' })
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-append-binary-001">
      <description>Test case for file:append-binary</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:append-binary('data.bin', xs:hexBinary('414243'))
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-append-text-001">
      <description>Test case for file:append-text</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:append-text('todos.txt', 'clean up')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-append-text-lines-001">
      <description>Test case for file:append-text-lines</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:append-text-lines('numbers.txt', (1 to 5) ! string())
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-copy-001">
      <description>Test case for file:copy</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:copy('a.txt', 'b.txt')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-copy-002">
      <description>Test case for file:copy</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:copy('a.txt', '../')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-copy-003">
      <description>Test case for file:copy</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:copy('dir/', 'dir2/')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-create-dir-001">
      <description>Test case for file:create-dir</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:create-dir('examples')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-create-dir-002">
      <description>Test case for file:create-dir</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:create-dir('/')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-create-temp-dir-001">
      <description>Test case for file:create-temp-dir</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:parent(file:create-temp-dir()) = file:temp-dir()
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fo-test-file-create-temp-dir-002">
      <description>Test case for file:create-temp-dir</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:create-temp-dir(dir := file:base-dir())
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-create-temp-dir-003">
      <description>Test case for file:create-temp-dir</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <dependency type="spec" value="XQ40+" satisfied="true"/>
      <test>
        
let $dir := file:create-temp-dir()
return try {
  file:write($dir || 'tmp.data', 1 to 10)
} finally {
  file:delete($dir, true())
}
          
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-create-temp-file-001">
      <description>Test case for file:create-temp-file</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:create-temp-file(suffix := '.txt')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-delete-001">
      <description>Test case for file:delete</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:delete('list.txt')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-delete-002">
      <description>Test case for file:delete</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:delete('examples', true())
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-list-001">
      <description>Test case for file:list</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:list('.')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-list-002">
      <description>Test case for file:list</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:list('.', pattern := '*.zip')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-list-003">
      <description>Test case for file:list</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        
let $root := '/path/to/files/'
for $file in file:list($root, true(), '*.txt')
let $path := file:resolve-path($file, $root)
where file:size($path) &gt; 1000000
return file:read-text($path)
          
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-list-roots-001">
      <description>Test case for file:list-roots</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:list-roots('/')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-move-001">
      <description>Test case for file:move</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:move('a.txt', 'b.txt')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-move-002">
      <description>Test case for file:move</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:move('a.txt', '../')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-move-003">
      <description>Test case for file:move</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:move('dir/', 'dir2/')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-read-binary-001">
      <description>Test case for file:read-binary</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:read-binary('data.bin') eq xs:hexBinary('41')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-read-binary-002">
      <description>Test case for file:read-binary</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:read-binary('data.bin', file:size($path) - 1, 1)
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-read-text-001">
      <description>Test case for file:read-text</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        contains(file:read-text('todos.txt'), 'push forward')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-read-text-002">
      <description>Test case for file:read-text</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        
'test.bin'
=&gt; file:write-binary(xs:hexBinary('00'))
=&gt; file:read-text(fallback := true())
=&gt; string-to-codepoints()
          
      </test>
      <result>
         <assert-deep-eq>65533</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-read-text-lines-001">
      <description>Test case for file:read-text-lines</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        
let $file := 'numbers.txt'
let $data := (1 to 5) ! string()
return (
  file:write-text-lines($file, $data),
  file:read-text-lines($file) =&gt; deep-equal($data)
)
          
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fo-test-file-write-001">
      <description>Test case for file:write</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:write('numbers.txt', 1 to 10)
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-write-002">
      <description>Test case for file:write</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <dependency type="spec" value="XQ40+" satisfied="true"/>
      <test>
        
file:write(
  'result.xml',
  &lt;result&gt;&lt;done/&gt;&lt;/result&gt;,
  { 'encoding': 'us-ascii', 'indent': true() }
)
          
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-write-003">
      <description>Test case for file:write</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        
file:write(
  'numbers.json',
  map:build(1 to 10, string#1),
  { 'method': 'json' }
)
          
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-write-binary-001">
      <description>Test case for file:write-binary</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:write-binary('data.bin', xs:hexBinary('414243'))
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-write-binary-002">
      <description>Test case for file:write-binary</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:write-binary('data.bin', xs:hexBinary('44', 2))
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-write-text-001">
      <description>Test case for file:write-text</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:write-text('todos.txt', 'get organized')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-write-text-lines-001">
      <description>Test case for file:write-text-lines</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:write-text-lines('numbers.txt', (1 to 5) ! string())
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-name-001">
      <description>Test case for file:name</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:name('')
      </test>
      <result>
         <assert-deep-eq>''</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-name-002">
      <description>Test case for file:name</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:name('/')
      </test>
      <result>
         <assert-deep-eq>''</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-name-003">
      <description>Test case for file:name</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:name('hello.txt')
      </test>
      <result>
         <assert-deep-eq>'hello.txt'</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-name-004">
      <description>Test case for file:name</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:name('dir/')
      </test>
      <result>
         <assert-deep-eq>'dir'</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-name-005">
      <description>Test case for file:name</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:name('dir/file.txt')
      </test>
      <result>
         <assert-deep-eq>'file.txt'</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-name-006">
      <description>Test case for file:name</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:name('dir/..')
      </test>
      <result>
         <assert-deep-eq>'..'</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-name-007">
      <description>Test case for file:name</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:name('file:///tmp/001.bin')
      </test>
      <result>
         <assert-deep-eq>'001.bin'</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-parent-001">
      <description>Test case for file:parent</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:parent('/')
      </test>
      <result>
         <assert-deep-eq>()</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-parent-002">
      <description>Test case for file:parent</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:current-dir() = file:parent('abc')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fo-test-file-children-001">
      <description>Test case for file:children</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        count(file:children('.'))
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-children-002">
      <description>Test case for file:children</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        
            file:children('path/to/media/')[matches(., '\.(avi|mpg|mp4)$', 'i')]
          
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-descendants-001">
      <description>Test case for file:descendants</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        count(file:descendants('.')[file:is-directory(.)])
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-descendants-002">
      <description>Test case for file:descendants</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        
for $file in file:descendants('.')
where file:last-modified($file) &gt; current-dateTime() - xs:dayTimeDuration('PT1H')
return $file
          
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-path-to-native-001">
      <description>Test case for file:path-to-native</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:path-to-native('/')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-path-to-uri-001">
      <description>Test case for file:path-to-uri</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:path-to-uri('/temp')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-path-to-uri-002">
      <description>Test case for file:path-to-uri</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        contains(file:path-to-uri('a b'), '%20')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fo-test-file-resolve-path-001">
      <description>Test case for file:resolve-path</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:resolve-path('INF', 'C:/Windows/')
      </test>
      <result>
         <assert-deep-eq>'C:/Windows/INF/'</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-resolve-path-002">
      <description>Test case for file:resolve-path</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:resolve-path('data.bin', 'C:/Temp')
      </test>
      <result>
         <assert-deep-eq>'C:/data.bin'</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-resolve-path-003">
      <description>Test case for file:resolve-path</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:resolve-path('hilda/notes.txt', '/home/')
      </test>
      <result>
         <assert-deep-eq>'/home/hilda/notes.txt'</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-dir-separator-001">
      <description>Test case for file:dir-separator</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:dir-separator() = ('/', '\')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fo-test-file-line-separator-001">
      <description>Test case for file:line-separator</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        matches(file:line-separator(), '^(\n|\r\n|\r)$')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fo-test-file-path-separator-001">
      <description>Test case for file:path-separator</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:dir-separator() = (':', ';')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fo-test-file-temp-dir-001">
      <description>Test case for file:temp-dir</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        file:write-text(file:temp-dir() || 'todos.txt', 'get on going')
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-base-dir-001">
      <description>Test case for file:base-dir</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        
let $dir := file:base-dir() otherwise file:create-temp-dir()
return file:write-text($dir || 'todos.txt', 'get up')
          
      </test>
      <result>
         <assert-deep-eq>���</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fo-test-file-current-dir-001">
      <description>Test case for file:current-dir</description>
      <created by="Michael Kay using generate-qt3-test-set.xsl" on="2025-10-29"/>
      <environment ref="global"/>
      <test>
        
file:path-to-native('todos.txt') =
file:path-to-native(file:current-dir() || 'todos.txt')
          
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
</test-set>
