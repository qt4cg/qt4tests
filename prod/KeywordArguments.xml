<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="prod-KeywordArguments">
   <description>Tests for KeywordArguments: 4.0 proposal</description>
             
   <dependency type="spec" value="XP40+ XQ40+"/>
   
   <!-- These tests use the syntax originally proposed for "map-variadic" functions. The proposal seems
      likely to be superseded, so I have withdrawn the tests for now. Michael Kay 2022-10-04 -->
   
   <test-case name="keyword-args-dummy">
      <description>Placeholder for schema validity</description>
      <created by="Michael Kay" on="2020-12-04"/>
      <test>true()</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
 <!--  <test-case name="keyword-args-001">
      <description>Basic test of keyword arguments in static function call</description>
      <created by="Michael Kay" on="2020-12-04"/>
      <test>map:merge(a:2, b:3) ?b</test>
      <result>
        <assert-eq>3</assert-eq>
      </result>
   </test-case>
   
   <test-case name="keyword-args-002">
      <description>Mixed with positional arguments in static function call</description>
      <created by="Michael Kay" on="2020-12-04"/>
      <test>map:merge((map{'a':1}, map{'a':2}), duplicates:'combine') ?a</test>
      <result>
         <assert-deep-eq>(1,2)</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="keyword-args-003">
      <description>Declared argument does not have to be a map type</description>
      <created by="Michael Kay" on="2020-12-04"/>
      <test>count(a:2, b:3)</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="keyword-args-004">
      <description>Declared argument does not have to be a map type</description>
      <created by="Michael Kay" on="2020-12-04"/>
      <test>identity(a:2, b:3) instance of map(*)</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="keyword-args-005">
      <description>A let expression as a positional argument still works</description>
      <created by="Michael Kay" on="2020-12-04"/>
      <test>identity(let $x := 3 return $x + 17)</test>
      <result>
         <assert-eq>20</assert-eq>
      </result>
   </test-case>
   
   <test-case name="keyword-args-006">
      <description>Keywords are not reserved</description>
      <created by="Michael Kay" on="2020-12-04"/>
      <test>map:merge(then: true(), else: false(), let: 'live')?then</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="keyword-args-007">
      <description>Keyword arguments in static arrow function call</description>
      <created by="Michael Kay" on="2020-12-04"/>
      <test>(map{'a':1}, map{'a':2}) => map:merge(duplicates:'combine') => map:get('a')</test>
      <result>
         <assert-deep-eq>(1,2)</assert-deep-eq>
      </result> 
   </test-case>
   
   <test-case name="keyword-args-008">
      <description>Keyword arguments in dynamic function call</description>
      <created by="Michael Kay" on="2020-12-04"/>
      <test>let $f := serialize#2 return $f(map{'a':1}, method:'json', indent:false())</test>
      <result>
         <error code="XPST0003"/>
      </result> 
   </test-case>
   
   <test-case name="keyword-args-009">
      <description>Keyword arguments in dynamic arrow function call</description>
      <created by="Michael Kay" on="2020-12-04"/>
      <test>let $f := serialize#2 return (map{'a':1} => $f(method: 'json', indent: false()))</test>
      <result>
         <error code="XPST0003"/>
      </result> 
   </test-case>
   
   <test-case name="keyword-args-901">
      <description>Duplicate keyword</description>
      <created by="Michael Kay" on="2020-12-04"/>
      <test>map:merge(b:2, b:3) ?b</test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>
   
   <test-case name="keyword-args-902">
      <description>Keyword argument followed by positional argument</description>
      <created by="Michael Kay" on="2020-12-04"/>
      <test>map:merge(a:2, b:3, 42) ?b</test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>
   
   <test-case name="keyword-args-903">
      <description>Keyword argument containing colon</description>
      <created by="Michael Kay" on="2020-12-04"/>
      <test>map:merge(a : 2, fn:dummy : 3) ?a</test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>
   
   <test-case name="keyword-args-904">
      <description>Keyword argument containing placemarker</description>
      <created by="Michael Kay" on="2020-12-04"/>
      <test>map:merge(a : 2, b : ?) ?a</test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>
   
   <test-case name="keyword-args-905">
      <description>Keyword argument in quotes [TODO: should we allow this?]</description>
      <created by="Michael Kay" on="2020-12-04"/>
      <test>map:merge(a : 2, "b" : 3) ?a</test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>-->
   

</test-set>

