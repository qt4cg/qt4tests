<?xml version="1.0" encoding="utf-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-all" covers-40="fn-all">
   <description>Tests for the fn:all() function (4.0 proposal)</description>
   <link type="spec" document="http://www.w3.org/TR/xquery-30/"
         idref="doc-xquery30-QuantifiedExpr"/>
   <link type="spec" document="XQuery" section-number="3.11"
         idref="id-quantified-expressions"/>
   
   <!-- Tests are derived from the tests on quantified expressions -->
   
   <dependency type="spec" value="XP40+ XQ40+"/>
   
   <test-case name="all-1">
      <description> Call on fn:all and addition expression. Returns false </description>
      <created by="Michael Kay after Carmelo Montanez" on="2020-11-29"/>
      <test>all((1, 2), function($x){$x + $x = 3})</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="all-2">
      <description> Call on fn:all and addition expression. Returns true </description>
      <created by="Michael Kay after Carmelo Montanez" on="2020-11-29"/>
      <test>all((1, 2), function($x){$x + $x = 2})</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="all-3">
      <description> Call on fn:all and a subtraction expression. Returns false </description>
      <created by="Michael Kay after Carmelo Montanez" on="2020-11-29"/>
      <test>all((1, 2), function($x){$x - 2 = 2})</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="all-4">
      <description>all() applied to empty sequence</description>
      <created by="Michael Kay" on="2020-11-29"/>
      <test>all(year-from-date(current-date()) to 0, is-NaN#1)</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="all-5">
      <description>all() with function returning non-boolean</description>
      <created by="Michael Kay" on="2020-11-29"/>
      <test>all(1 to 10, function($x){$x + 1})</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="all-6">
      <description>all() with function having wrong arity</description>
      <created by="Michael Kay" on="2020-11-29"/>
      <test>all(10 to 20, function($x, $y){$x + 1})</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="all-7">
      <description>all() with function accepting wrong type</description>
      <created by="Michael Kay" on="2020-11-29"/>
      <test>all(10 to 20, function($x){name($x) = 'alpha'})</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="all-16">
      <description> Call on fn:all and use of logical expression (and). </description>
      <created by="Michael Kay after Carmelo Montanez" on="2020-11-29"/>
      <test>all((1, 2), function($x){ $x = 1 and ($x +1) = 2})</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="all-17">
      <description> Call on fn:all and and use of string data. </description>
      <created by="Michael Kay after Carmelo Montanez" on="2020-11-29"/>
      <test>all(("A","B","C"), function($x){ $x = "A" })</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="all-18">
      <description> Call on fn:all with multiple variables and addition expression </description>
      <created by="Michael Kay after Carmelo Montanez" on="2020-11-29"/>
      <test>all((1,2,3), function($x){all((4,5,6), function($y){$x + $y = 5})})</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="all-19">
      <description> Call on fn:all and and use of string data. </description>
      <created by="Michael Kay after Carmelo Montanez" on="2020-11-29"/>
      <test>all(("A","B","C"), function($x){ $x instance of xs:string })</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="all-20">
      <description>fn:all#1, empty sequence</description>
      <created by="Michael Kay" on="2022-09-13"/>
      <test>all(())</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="all-21">
      <description>fn:all#1, returning true</description>
      <created by="Michael Kay" on="2022-09-13"/>
      <test>all((1=1, 2=2, 3=3))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="all-22">
      <description>fn:all#1, returning false</description>
      <created by="Michael Kay" on="2022-09-13"/>
      <test>all((1=1, 2=5, 3=3))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="all-23">
      <description>fn:all#1, returning error</description>
      <created by="Michael Kay" on="2022-09-13"/>
      <test>all((1=1, 2=2, 17))</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="all-24">
      <description>fn:all#1, returning false or error</description>
      <created by="Michael Kay" on="2022-09-13"/>
      <test>all((1=1, 2=3, 17))</test>
      <result>
         <any-of>
            <assert-false/>
            <error code="XPTY0004"/>
         </any-of>
      </result>
   </test-case>
   
   <test-case name="all-25">
      <description>fn:all#2, function requires coercion, success case</description>
      <created by="Michael Kay" on="2022-09-13"/>
      <test>all(1 to 5, function($x){$x gt 0})</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="all-26">
      <description>fn:all#2, function requires coercion, failure case</description>
      <created by="Michael Kay" on="2022-09-13"/>
      <test>all((true(), 'zizzy'), function($x){$x})</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   

</test-set>