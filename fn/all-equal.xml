<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-all-equal" covers-40="fn-all-equal">
  <description>Tests for the fn:all-equal function (previously named "uniform")</description>
  <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/" idref="func-all-equal"/>
  <dependency type="spec" value="XP40+ XQ40+"/>
  <test-case name="all-equal-001">
    <description>Empty sequence</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal(())]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-002">
    <description>Single integer</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal(1)]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-003">
    <description>Single string</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal("x")]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-004">
    <description>Integers</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal((1, 1))]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-005">
    <description>Identical integers</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal((1 to 1000) ! 1)]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-006">
    <description>Identical strings</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal((1 to 1000) ! 'x')]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-007">
    <description>Integer range</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal((1 to 2))]]></test>
    <result>
      <assert-string-value>false</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-008">
    <description>Integers</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal((1, 2, 3))]]></test>
    <result>
      <assert-string-value>false</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-009">
    <description>Strings</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal((1, 2, 3) ! string())]]></test>
    <result>
      <assert-string-value>false</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-010">
    <description>Items of different type</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal((1, '1'))]]></test>
    <result>
      <assert-string-value>false</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-011">
    <description>Numbers of different type</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal((1, 1.0, 1e0))]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-012">
    <description>Element with filter expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[fn:all-equal(<a/>[. = ''])]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-013">
    <description>Elements with filter expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[fn:all-equal((<a/>, <b/>)[. = ''])]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-014">
    <description>Element with filter expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[fn:all-equal(<a/>[. != ''])]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-015">
    <description>Elements with filter expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[fn:all-equal((<a/>, <b/>)[. != ''])]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-016">
    <description>Empty array</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal([])]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-017">
    <description>Array with single member</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal([ 1 ])]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-018">
    <description>Array with all-equal members</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal([ 1, 1 ])]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-019">
    <description>Array with distinct members</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal([ 1, 2 ])]]></test>
    <result>
      <assert-string-value>false</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-020">
    <description>Dynamic range expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[fn:all-equal((1 to <_>1</_>/text()))]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-021">
    <description>Dynamic range expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[fn:all-equal((1 to <_>2</_>/text()))]]></test>
    <result>
      <assert-string-value>false</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-022">
    <description>Replicated filter expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal(replicate((1 to 100)[. < 1], 100))]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-023">
    <description>Replicated filter expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal(replicate((1 to 100)[. < 2], 100))]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-024">
    <description>Replicated filter expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal(replicate((1 to 100)[. < 3], 100))]]></test>
    <result>
      <assert-string-value>false</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-025">
    <description>Reversed strings</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal(reverse((1 to 10) ! string()))]]></test>
    <result>
      <assert-string-value>false</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-026">
    <description>Sorted strings</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal(sort((1 to 10) ! string()))]]></test>
    <result>
      <assert-string-value>false</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-027">
    <description>Strings and collation</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal(('A', 'a'), "http://www.w3.org/2005/xpath-functions/collation/html-ascii-case-insensitive")]]></test>
    <result>
      <assert-string-value>true</assert-string-value>
    </result>
  </test-case>
  <test-case name="all-equal-028">
    <description>Strings and collation</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-equal(('A', 'b'), "http://www.w3.org/2005/xpath-functions/collation/html-ascii-case-insensitive")]]></test>
    <result>
      <assert-string-value>false</assert-string-value>
    </result>
  </test-case>
</test-set>