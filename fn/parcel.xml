<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-parcel"  covers-40="fn-parcel">
   <description>Tests for the proposed XPath 4.0 parcel() function</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-empty"/>
   
   <dependency type="spec" value="XP40+ XQ40+"/>

   <test-case name="fn-parcel-001">
      <description> Create an empty parcel </description>
      <created by="Michael Kay" on="2021-06-28"/>
      <test>empty(unparcel(parcel(())))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="fn-parcel-002">
      <description> Create a singleton parcel </description>
      <created by="Michael Kay" on="2021-06-28"/>
      <test>count(unparcel(parcel(42))) = 1</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="fn-parcel-003">
      <description> Create a singleton parcel </description>
      <created by="Michael Kay" on="2021-06-28"/>
      <test>unparcel(parcel(42)) eq 42</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="fn-parcel-004">
      <description> Create a non-trivial parcel </description>
      <created by="Michael Kay" on="2021-06-28"/>
      <test>count(unparcel(parcel(1 to 10))) eq 10</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="fn-parcel-005">
      <description> Create a non-trivial parcel </description>
      <created by="Michael Kay" on="2021-06-28"/>
      <test>sum(unparcel(parcel(1 to 10))) eq 55</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="fn-parcel-006">
      <description> Create an array from a sequence of parcels </description>
      <created by="Michael Kay" on="2021-06-28"/>
      <test>array:of((parcel(characters("abc")), parcel(characters("xyz"))))</test>
      <result>
         <assert-deep-eq>[("a", "b", "c"), ("x", "y", "z")]</assert-deep-eq>
      </result>
   </test-case>

 
</test-set>
