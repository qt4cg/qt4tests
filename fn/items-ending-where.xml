<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-items-ending-where"  covers-40="fn-items-ending-where">
   <description>Tests for the fn:items-ending-where function (4.0 proposal)</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-11/"
         idref="func-items-ending-where"/>
         
    <dependency type="spec" value="XP40+ XQ40+"/>  

   <test-case name="items-ending-where-001">
       <description>Basic example</description>
      <created by="Michael Kay" on="2019-06-09"/>
      <test>items-ending-where(1 to 29, function($x){$x=10})</test>
      <result>
          <assert-deep-eq>1 to 10</assert-deep-eq>
      </result>
   </test-case>
    
    <test-case name="items-ending-where-002">
        <description>No match</description>
        <created by="Michael Kay" on="2019-06-09"/>
        <test>items-ending-where(1 to 29, function($x){$x=100})</test>
        <result>
            <assert-deep-eq>1 to 29</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="items-ending-where-003">
        <description>Match on first</description>
        <created by="Michael Kay" on="2019-06-09"/>
        <test>items-ending-where(1 to 29, function($x){true()})</test>
        <result>
            <assert-eq>1</assert-eq>
        </result>
    </test-case>
    
    <test-case name="items-ending-where-004">
        <description>Empty input</description>
        <created by="Michael Kay" on="2019-06-09"/>
        <test>items-ending-where((), function($x){$x = 3})</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    
    <test-case name="items-ending-where-005">
        <description>Match at end of sequence</description>
        <created by="Michael Kay" on="2019-06-09"/>
        <test>items-ending-where(1 to 29, function($x){$x eq 29})</test>
        <result>
            <assert-deep-eq>1 to 29</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="items-ending-where-006">
        <description>Map as argument</description>
        <created by="Michael Kay" on="2019-06-09"/>
        <test>items-ending-where(1 to 5, map{1:false(), 2:false(), 3:true(), 4:true(), 5:true()})</test>
        <result>
            <assert-deep-eq>1 to 3</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="items-ending-where-007">
        <description>Sequence of nodes</description>
        <created by="Michael Kay" on="2019-06-09"/>
        <dependency type="spec" value="XQ31+"/>
        <test><![CDATA[
            let $nodes := document{<x><a/><b/><c/><d/><e/></x>}
            return items-ending-where($nodes/x/*, function($node){exists($node[self::c])})!local-name()
            ]]></test>
        <result>
            <assert-deep-eq>'a', 'b', 'c'</assert-deep-eq>
        </result>
    </test-case>

    <test-case name="items-ending-where-101">
        <description>Empty sequence, named function reference</description>
        <created by="Christian Gruen" on="2022-08-10"/>
        <test>fn:items-ending-where((), boolean#1)</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    <test-case name="items-ending-where-102">
        <description>Single integer, named function reference</description>
        <created by="Christian Gruen" on="2022-08-10"/>
        <test>fn:items-ending-where(0, boolean#1)</test>
        <result>
            <assert-eq>0</assert-eq>
        </result>
    </test-case>
    <test-case name="items-ending-where-103">
        <description>Single integer, named function reference</description>
        <created by="Christian Gruen" on="2022-08-10"/>
        <test>fn:items-ending-where(1, boolean#1)</test>
        <result>
            <assert-eq>1</assert-eq>
        </result>
    </test-case>
    <test-case name="items-ending-where-104">
        <description>Integers, named function reference</description>
        <created by="Christian Gruen" on="2022-08-10"/>
        <test>fn:items-ending-where((0, 1, 2, 3, 0), boolean#1)</test>
        <result>
            <assert-deep-eq>0, 1</assert-deep-eq>
        </result>
    </test-case>
    <test-case name="items-ending-where-105">
        <description>Integer range, named function reference</description>
        <created by="Christian Gruen" on="2022-08-10"/>
        <test>fn:items-ending-where(1 to 3, not#1)</test>
        <result>
            <assert-deep-eq>1, 2, 3</assert-deep-eq>
        </result>
    </test-case>
    <test-case name="items-ending-where-106">
        <description>Integer range, function item</description>
        <created by="Christian Gruen" on="2022-08-10"/>
        <test>fn:items-ending-where(1 to 3, function($n) { $n mod 2 = 0 })</test>
        <result>
            <assert-deep-eq>1, 2</assert-deep-eq>
        </result>
    </test-case>
    <test-case name="items-ending-where-107">
        <description>Partial function application</description>
        <created by="Christian Gruen" on="2022-08-10"/>
        <test>fn:items-ending-where(('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'), contains(?, ''))</test>
        <result>
            <assert-string-value>January</assert-string-value>
        </result>
    </test-case>
    <test-case name="items-ending-where-108">
        <description>Partial function application</description>
        <created by="Christian Gruen" on="2022-08-10"/>
        <test>fn:items-ending-where(('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'), starts-with(?, 'Feb'))</test>
        <result>
            <assert-deep-eq>'January', 'February'</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="items-ending-where-901">
        <description>Test use of EBV is disallowed</description>
        <created by="Michael Kay" on="2019-06-09"/>
        <test>items-ending-where(1 to 100, function($x){$x - 1})</test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
    
    <test-case name="items-ending-where-902">
        <description>Wrong arity of function</description>
        <created by="Michael Kay" on="2019-06-09"/>
        <test>items-ending-where(1 to 100, function($x, $y){$x - 1})</test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
  
</test-set>