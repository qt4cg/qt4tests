<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-is-NaN"  covers-40="fn-is-NaN">
  <description>Tests for the fn:is-NaN function (4.0 proposal)</description>
  <link type="spec" document="http://www.w3.org/TR/xpath-functions-11/" idref="func-is-NaN"/>

  <dependency type="spec" value="XP40+ XQ40+"/>

  <test-case name="is-NaN-001">
    <description>Basic example</description>
    <created by="Michael Kay" on="2020-02-08"/>
    <test>is-NaN(number("NaN"))</test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="is-NaN-002">
    <description>Basic example</description>
    <created by="Michael Kay" on="2020-02-08"/>
    <test>is-NaN(23)</test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="is-NaN-003">
    <description>Basic example</description>
    <created by="Michael Kay" on="2020-02-08"/>
    <test>is-NaN(number("rubbish"))</test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="is-NaN-004">
    <description>xs:float example</description>
    <created by="Michael Kay" on="2020-02-08"/>
    <test>is-NaN(xs:float("NaN"))</test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="is-NaN-005">
    <description>decimal argument</description>
    <created by="Michael Kay" on="2020-02-08"/>
    <test>is-NaN(820.54)</test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="is-NaN-006">
    <description>integer argument</description>
    <created by="Michael Kay" on="2020-02-08"/>
    <test>is-NaN(820)</test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="is-NaN-007">
    <description>string argument</description>
    <created by="Michael Kay" on="2020-02-08"/>
    <test>is-NaN("xyz")</test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="is-NaN-008">
    <description>Array gets atomized</description>
    <created by="Michael Kay" on="2020-02-08"/>
    <test>is-NaN([number('NaN')])</test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="is-NaN-009">
    <description>Argument: element</description>
    <created by="Christian Gruen" on="2022-08-08"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[ is-NaN(<_/>) ]]></test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="is-NaN-010">
    <description>Argument: processing instruction</description>
    <created by="Christian Gruen" on="2022-08-08"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[ is-NaN(<?_ ?>) ]]></test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="is-NaN-011">
    <description>Arguments: double values</description>
    <created by="Christian Gruen" on="2022-08-08"/>
    <test><![CDATA[
let $seq := (0 to 9) ! is-NaN(. div xs:double(.))
return index-of($seq, true())
    ]]></test>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>

  <test-case name="is-NaN-012">
    <description>Argument: numeric types</description>
    <created by="Christian Gruen" on="2022-08-08"/>
    <test><![CDATA[
for $i in (
  xs:double('NaN'),
  xs:float('NaN'),
  xs:integer(1),
  xs:short(1)
)
return is-NaN($i)
    ]]></test>
    <result>
      <assert-deep-eq>true(), true(), false(), false()</assert-deep-eq>
    </result>
  </test-case>

  <test-case name="is-NaN-901">
    <description>Empty sequence not allowed</description>
    <created by="Michael Kay" on="2020-02-08"/>
    <test>is-NaN(())</test>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>

  <test-case name="is-NaN-902">
    <description>Sequence not allowed</description>
    <created by="Michael Kay" on="2020-02-08"/>
    <test>is-NaN((number('NaN'), number('NaN')))</test>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>

  <test-case name="is-NaN-903">
    <description>Function item argument not allowed</description>
    <created by="Christian Gruen" on="2022-08-08"/>
    <test>is-NaN(true#0)</test>
    <result>
      <error code="FOTY0013"/>
    </result>
  </test-case>

  <test-case name="is-NaN-904">
    <description>Map argument not allowed</description>
    <created by="Christian Gruen" on="2022-08-08"/>
    <test>is-NaN(map { 0 div 0e0: 0 div 0e0 })</test>
    <result>
      <error code="FOTY0013"/>
    </result>
  </test-case>

</test-set>
