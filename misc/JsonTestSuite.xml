<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="misc-JsonTestSuite">
   <description>Tests from the JSONTestSuite (http://github.com/nst/JSONTestSuite)</description>
   <link type="spec"
         document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-surrogates"/>
   <link type="spec"
         document="FuncOps"
         section-number="7.1"
         idref="string-types"/>
   <test-case name="y_array_empty-string">
      <description>JSONTestSuite test case y_array_empty-string</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_array_empty-string.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_minus_sign_with_trailing_garbage">
      <description>JSONTestSuite test case n_number_minus_sign_with_trailing_garbage</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_minus_sign_with_trailing_garbage.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_object_with_single_string">
      <description>JSONTestSuite test case n_object_with_single_string</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_with_single_string.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_number_too_big_pos_int">
      <description>JSONTestSuite test case i_number_too_big_pos_int</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_number_too_big_pos_int.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_string_null_escape">
      <description>JSONTestSuite test case y_string_null_escape</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_null_escape.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="i_string_overlong_sequence_6_bytes">
      <description>JSONTestSuite test case i_string_overlong_sequence_6_bytes</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_overlong_sequence_6_bytes.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_array_null">
      <description>JSONTestSuite test case y_array_null</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_array_null.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_object_missing_value">
      <description>JSONTestSuite test case n_object_missing_value</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_missing_value.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_string_incomplete_surrogates_escape_valid">
      <description>JSONTestSuite test case i_string_incomplete_surrogates_escape_valid</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_incomplete_surrogates_escape_valid.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_structure_open_object_close_array">
      <description>JSONTestSuite test case n_structure_open_object_close_array</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_open_object_close_array.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_number_real_pos_overflow">
      <description>JSONTestSuite test case i_number_real_pos_overflow</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_number_real_pos_overflow.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="i_string_lone_utf8_continuation_byte">
      <description>JSONTestSuite test case i_string_lone_utf8_continuation_byte</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_lone_utf8_continuation_byte.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_number_-2.">
      <description>JSONTestSuite test case n_number_-2.</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_-2..json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_unclosed_array">
      <description>JSONTestSuite test case n_structure_unclosed_array</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_unclosed_array.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_escape_x">
      <description>JSONTestSuite test case n_string_escape_x</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_escape_x.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_string_UTF-16LE_with_BOM">
      <description>JSONTestSuite test case i_string_UTF-16LE_with_BOM</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_UTF-16LE_with_BOM.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_number_invalid-utf-8-in-bigger-int">
      <description>JSONTestSuite test case n_number_invalid-utf-8-in-bigger-int</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <modified by="Michael Kay, Saxonica" on="2018-09-21" change="change expected error code"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_invalid-utf-8-in-bigger-int.json')</test>
      <result>
         <any-of>
            <error code="FOUT1190"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_number_invalid-utf-8-in-exponent">
      <description>JSONTestSuite test case n_number_invalid-utf-8-in-exponent</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <modified by="Michael Kay, Saxonica" on="2018-09-21" change="change expected error code"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_invalid-utf-8-in-exponent.json')</test>
      <result>
         <any-of>
            <error code="FOUT1190"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_string_1_2_3_bytes_UTF-8_sequences">
      <description>JSONTestSuite test case y_string_1_2_3_bytes_UTF-8_sequences</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_1_2_3_bytes_UTF-8_sequences.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_single_space">
      <description>JSONTestSuite test case n_single_space</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_single_space.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_number_real_exponent">
      <description>JSONTestSuite test case y_number_real_exponent</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_real_exponent.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="i_number_real_neg_overflow">
      <description>JSONTestSuite test case i_number_real_neg_overflow</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_number_real_neg_overflow.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_object">
      <description>JSONTestSuite test case y_object</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_object.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="i_string_iso_latin_1">
      <description>JSONTestSuite test case i_string_iso_latin_1</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_iso_latin_1.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_object_unquoted_key">
      <description>JSONTestSuite test case n_object_unquoted_key</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_unquoted_key.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_array_a_invalid_utf8">
      <description>JSONTestSuite test case n_array_a_invalid_utf8</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <modified by="Michael Kay, Saxonica" on="2018-09-22" change="change expected error code"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_a_invalid_utf8.json')</test>
      <result>
         <any-of>
            <error code="FOUT1190"/>
            <error code="FOUT1200"/>
         </any-of>        
      </result>
   </test-case>
   <test-case name="y_number_minus_zero">
      <description>JSONTestSuite test case y_number_minus_zero</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_minus_zero.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_object_several_trailing_commas">
      <description>JSONTestSuite test case n_object_several_trailing_commas</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_several_trailing_commas.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_number_double_close_to_zero">
      <description>JSONTestSuite test case y_number_double_close_to_zero</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_double_close_to_zero.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_structure_single_eacute">
      <description>JSONTestSuite test case n_structure_single_eacute</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <modified by="Michael Kay, Saxonica" on="2018-09-22"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_single_eacute.json')</test>
      <result>
         <any-of>
            <error code="FOUT1190"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_structure_open_object_comma">
      <description>JSONTestSuite test case n_structure_open_object_comma</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_open_object_comma.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_allowed_escapes">
      <description>JSONTestSuite test case y_string_allowed_escapes</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_allowed_escapes.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_array_just_minus">
      <description>JSONTestSuite test case n_array_just_minus</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_just_minus.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_array_empty">
      <description>JSONTestSuite test case y_array_empty</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_array_empty.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_structure_open_object_open_array">
      <description>JSONTestSuite test case n_structure_open_object_open_array</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_open_object_open_array.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_invalid_unicode_escape">
      <description>JSONTestSuite test case n_string_invalid_unicode_escape</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_invalid_unicode_escape.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_9.e+">
      <description>JSONTestSuite test case n_number_9.e+</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_9.e+.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_incomplete_escape">
      <description>JSONTestSuite test case n_string_incomplete_escape</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_incomplete_escape.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_structure_string_empty">
      <description>JSONTestSuite test case y_structure_string_empty</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_structure_string_empty.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_object_empty">
      <description>JSONTestSuite test case y_object_empty</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_object_empty.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_pi">
      <description>JSONTestSuite test case y_string_pi</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_pi.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_structure_unclosed_array_unfinished_false">
      <description>JSONTestSuite test case n_structure_unclosed_array_unfinished_false</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_unclosed_array_unfinished_false.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_escaped_noncharacter">
      <description>JSONTestSuite test case y_string_escaped_noncharacter</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_escaped_noncharacter.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_with_leading_zero">
      <description>JSONTestSuite test case n_number_with_leading_zero</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_with_leading_zero.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_number_int_with_exp">
      <description>JSONTestSuite test case y_number_int_with_exp</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_int_with_exp.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_1.0e+">
      <description>JSONTestSuite test case n_number_1.0e+</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_1.0e+.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_-NaN">
      <description>JSONTestSuite test case n_number_-NaN</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_-NaN.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_unescaped_tab">
      <description>JSONTestSuite test case n_string_unescaped_tab</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_unescaped_tab.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_ascii-unicode-identifier">
      <description>JSONTestSuite test case n_structure_ascii-unicode-identifier</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_ascii-unicode-identifier.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_incomplete_surrogate">
      <description>JSONTestSuite test case n_string_incomplete_surrogate</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_incomplete_surrogate.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_array_items_separated_by_semicolon">
      <description>JSONTestSuite test case n_array_items_separated_by_semicolon</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_items_separated_by_semicolon.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_string_invalid_surrogate">
      <description>JSONTestSuite test case i_string_invalid_surrogate</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_invalid_surrogate.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_number_infinity">
      <description>JSONTestSuite test case n_number_infinity</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_infinity.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_comma_instead_of_closing_brace">
      <description>JSONTestSuite test case n_structure_comma_instead_of_closing_brace</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_comma_instead_of_closing_brace.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_object_duplicated_key_and_value">
      <description>JSONTestSuite test case y_object_duplicated_key_and_value</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_object_duplicated_key_and_value.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_string_with_trailing_garbage">
      <description>JSONTestSuite test case n_string_with_trailing_garbage</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_with_trailing_garbage.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_0.1.2">
      <description>JSONTestSuite test case n_number_0.1.2</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_0.1.2.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_last_surrogates_1_and_2">
      <description>JSONTestSuite test case y_string_last_surrogates_1_and_2</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_last_surrogates_1_and_2.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_accepted_surrogate_pair">
      <description>JSONTestSuite test case y_string_accepted_surrogate_pair</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_accepted_surrogate_pair.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="i_string_1st_valid_surrogate_2nd_invalid">
      <description>JSONTestSuite test case i_string_1st_valid_surrogate_2nd_invalid</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_1st_valid_surrogate_2nd_invalid.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_structure_lonely_false">
      <description>JSONTestSuite test case y_structure_lonely_false</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_structure_lonely_false.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_structure_uescaped_LF_before_string">
      <description>JSONTestSuite test case n_structure_uescaped_LF_before_string</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_uescaped_LF_before_string.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_number_real_capital_e_pos_exp">
      <description>JSONTestSuite test case y_number_real_capital_e_pos_exp</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_real_capital_e_pos_exp.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_Inf">
      <description>JSONTestSuite test case n_number_Inf</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_Inf.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_array_incomplete">
      <description>JSONTestSuite test case n_array_incomplete</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_incomplete.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_object_key_lone_2nd_surrogate">
      <description>JSONTestSuite test case i_object_key_lone_2nd_surrogate</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_object_key_lone_2nd_surrogate.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="i_string_utf16BE_no_BOM">
      <description>JSONTestSuite test case i_string_utf16BE_no_BOM</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_utf16BE_no_BOM.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_string_unicode">
      <description>JSONTestSuite test case y_string_unicode</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_unicode.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_string_accentuated_char_no_quotes">
      <description>JSONTestSuite test case n_string_accentuated_char_no_quotes</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_accentuated_char_no_quotes.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_structure_true_in_array">
      <description>JSONTestSuite test case y_structure_true_in_array</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_structure_true_in_array.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_.2e-3">
      <description>JSONTestSuite test case n_number_.2e-3</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_.2e-3.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_open_array_comma">
      <description>JSONTestSuite test case n_structure_open_array_comma</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_open_array_comma.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_unicode_U+1FFFE_nonchar">
      <description>JSONTestSuite test case y_string_unicode_U+1FFFE_nonchar</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_unicode_U+1FFFE_nonchar.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_backslash_and_u_escaped_zero">
      <description>JSONTestSuite test case y_string_backslash_and_u_escaped_zero</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_backslash_and_u_escaped_zero.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_three-byte-utf-8">
      <description>JSONTestSuite test case y_string_three-byte-utf-8</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_three-byte-utf-8.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_backslash_doublequotes">
      <description>JSONTestSuite test case y_string_backslash_doublequotes</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_backslash_doublequotes.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_array_missing_value">
      <description>JSONTestSuite test case n_array_missing_value</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_missing_value.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_object_trailing_comma">
      <description>JSONTestSuite test case n_object_trailing_comma</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_trailing_comma.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_object_two_commas_in_a_row">
      <description>JSONTestSuite test case n_object_two_commas_in_a_row</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_two_commas_in_a_row.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_no_data">
      <description>JSONTestSuite test case n_structure_no_data</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_no_data.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_single_star">
      <description>JSONTestSuite test case n_structure_single_star</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_single_star.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_uescaped_newline">
      <description>JSONTestSuite test case y_string_uescaped_newline</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_uescaped_newline.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_invalid-negative-real">
      <description>JSONTestSuite test case n_number_invalid-negative-real</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_invalid-negative-real.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_lone-invalid-utf-8">
      <description>JSONTestSuite test case n_structure_lone-invalid-utf-8</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <modified by="Michael Kay, Saxonica" on="2018-09-21" change="change expected error code"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_lone-invalid-utf-8.json')</test>
      <result>
         <any-of>
            <error code="FOUT1190"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_array_incomplete_invalid_value">
      <description>JSONTestSuite test case n_array_incomplete_invalid_value</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_incomplete_invalid_value.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_0e">
      <description>JSONTestSuite test case n_number_0e</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_0e.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_invalid-utf-8-in-int">
      <description>JSONTestSuite test case n_number_invalid-utf-8-in-int</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <modified by="Michael Kay, Saxonica" on="2018-09-21" change="change expected error code"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_invalid-utf-8-in-int.json')</test>
      <result>
         <any-of>
            <error code="FOUT1190"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_string_invalid_utf8_after_escape">
      <description>JSONTestSuite test case n_string_invalid_utf8_after_escape</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <modified by="Michael Kay, Saxonica" on="2018-09-21" change="change expected error code"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_invalid_utf8_after_escape.json')</test>
      <result>
         <any-of>
            <error code="FOUT1190"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_array_number_and_comma">
      <description>JSONTestSuite test case n_array_number_and_comma</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_number_and_comma.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_unclosed_object">
      <description>JSONTestSuite test case n_structure_unclosed_object</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_unclosed_object.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_starting_with_dot">
      <description>JSONTestSuite test case n_number_starting_with_dot</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_starting_with_dot.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_number_after_space">
      <description>JSONTestSuite test case y_number_after_space</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_after_space.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_structure_whitespace_formfeed">
      <description>JSONTestSuite test case n_structure_whitespace_formfeed</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_whitespace_formfeed.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_2.e3">
      <description>JSONTestSuite test case n_number_2.e3</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_2.e3.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_number_negative_one">
      <description>JSONTestSuite test case y_number_negative_one</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_negative_one.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_object_key_with_single_quotes">
      <description>JSONTestSuite test case n_object_key_with_single_quotes</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_key_with_single_quotes.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_U+FF11_fullwidth_digit_one">
      <description>JSONTestSuite test case n_number_U+FF11_fullwidth_digit_one</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_U+FF11_fullwidth_digit_one.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_structure_lonely_int">
      <description>JSONTestSuite test case y_structure_lonely_int</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_structure_lonely_int.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_structure_unclosed_array_partial_null">
      <description>JSONTestSuite test case n_structure_unclosed_array_partial_null</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_unclosed_array_partial_null.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_number_huge_exp">
      <description>JSONTestSuite test case i_number_huge_exp</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_number_huge_exp.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_structure_object_with_trailing_garbage">
      <description>JSONTestSuite test case n_structure_object_with_trailing_garbage</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_object_with_trailing_garbage.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_string_UTF8_surrogate_U+D800">
      <description>JSONTestSuite test case i_string_UTF8_surrogate_U+D800</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_UTF8_surrogate_U+D800.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_structure_lonely_negative_real">
      <description>JSONTestSuite test case y_structure_lonely_negative_real</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_structure_lonely_negative_real.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_object_non_string_key">
      <description>JSONTestSuite test case n_object_non_string_key</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_non_string_key.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_1.0e-">
      <description>JSONTestSuite test case n_number_1.0e-</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_1.0e-.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_++">
      <description>JSONTestSuite test case n_number_++</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_++.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_unicode_escaped_double_quote">
      <description>JSONTestSuite test case y_string_unicode_escaped_double_quote</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_unicode_escaped_double_quote.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_object_garbage_at_end">
      <description>JSONTestSuite test case n_object_garbage_at_end</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_garbage_at_end.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_number_real_capital_e">
      <description>JSONTestSuite test case y_number_real_capital_e</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_real_capital_e.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_double_escape_a">
      <description>JSONTestSuite test case y_string_double_escape_a</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_double_escape_a.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_-01">
      <description>JSONTestSuite test case n_number_-01</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_-01.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_number_real_fraction_exponent">
      <description>JSONTestSuite test case y_number_real_fraction_exponent</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_real_fraction_exponent.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_array_number_and_several_commas">
      <description>JSONTestSuite test case n_array_number_and_several_commas</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_number_and_several_commas.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_comments">
      <description>JSONTestSuite test case y_string_comments</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_comments.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_structure_UTF8_BOM_no_data">
      <description>JSONTestSuite test case n_structure_UTF8_BOM_no_data</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_UTF8_BOM_no_data.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_single_doublequote">
      <description>JSONTestSuite test case n_string_single_doublequote</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_single_doublequote.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_number_too_big_neg_int">
      <description>JSONTestSuite test case i_number_too_big_neg_int</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_number_too_big_neg_int.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_structure_lonely_null">
      <description>JSONTestSuite test case y_structure_lonely_null</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_structure_lonely_null.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_space">
      <description>JSONTestSuite test case y_string_space</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_space.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_object_lone_continuation_byte_in_key_and_trailing_comma">
      <description>JSONTestSuite test case n_object_lone_continuation_byte_in_key_and_trailing_comma</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <modified by="Michael Kay, Saxonica" on="2018-09-21" change="change expected error code"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_lone_continuation_byte_in_key_and_trailing_comma.json')</test>
      <result>
         <any-of>
            <error code="FOUT1190"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_string_uEscape">
      <description>JSONTestSuite test case y_string_uEscape</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_uEscape.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_array_with_1_and_newline">
      <description>JSONTestSuite test case y_array_with_1_and_newline</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_array_with_1_and_newline.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_structure_end_array">
      <description>JSONTestSuite test case n_structure_end_array</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_end_array.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_unicode_CapitalU">
      <description>JSONTestSuite test case n_string_unicode_CapitalU</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_unicode_CapitalU.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_array_extra_comma">
      <description>JSONTestSuite test case n_array_extra_comma</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_extra_comma.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_with_alpha_char">
      <description>JSONTestSuite test case n_number_with_alpha_char</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_with_alpha_char.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_backslash_00">
      <description>JSONTestSuite test case n_string_backslash_00.
      
      The test contains \§, where § is x00.
      
      See Saxon bug 3911. json-doc() explicitly says:
      
      The effect of the two-argument function call fn:json-doc($H, $M)is equivalent to the function composition fn:unparsed-text($H) => fn:parse-json($M); 
      except that: (b) If the resource contains characters that are not valid in the version of XML used by the processor, then rather than raising an error 
      as fn:unparsed-text#1 does, the function replaces such characters by the equivalent JSON escape sequence prior to parsing.
      
      WHat does this mean? Replacing x00 by '\u0000' would not be equivalent at all, because '\\u0000' would be parsed as representing 
      the six characters \, u, 0, 0, 0, 0.
      
      I think the intent of the spec is that x00 shouldn't be rejected at the decoding level, it should be passed through like any other character 
      to the JSON parsing level, and accepted if it appears in a position where the grammar allows it (ie within a string). The proposed mechanism 
      of replacing the character with an escape sequence is a way of trying to get around the fact that strings containing x00 can't exist in the 
      XDM data model, and therefore some other device must be found; but the mechanism proposed doesn't work.
      
      There is only an equivalent escape sequence in places where escape sequences are recognized, and even in strings, there are places where they are
      not recognized, like immediately after "\".
      
      MHK 2018-09-22      
      
      </description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_backslash_00.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_string_1st_surrogate_but_2nd_missing">
      <description>JSONTestSuite test case i_string_1st_surrogate_but_2nd_missing</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_1st_surrogate_but_2nd_missing.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_structure_whitespace_U+2060_word_joiner">
      <description>JSONTestSuite test case n_structure_whitespace_U+2060_word_joiner</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_whitespace_U+2060_word_joiner.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_capitalized_True">
      <description>JSONTestSuite test case n_structure_capitalized_True</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_capitalized_True.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_array_star_inside">
      <description>JSONTestSuite test case n_array_star_inside</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_star_inside.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_object_trailing_comment_slash_open">
      <description>JSONTestSuite test case n_object_trailing_comment_slash_open</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_trailing_comment_slash_open.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_array_1_true_without_comma">
      <description>JSONTestSuite test case n_array_1_true_without_comma</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_1_true_without_comma.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_number_0e+1">
      <description>JSONTestSuite test case y_number_0e+1</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_0e+1.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_object_with_newlines">
      <description>JSONTestSuite test case y_object_with_newlines</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_object_with_newlines.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_with_alpha">
      <description>JSONTestSuite test case n_number_with_alpha</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_with_alpha.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_open_array_apostrophe">
      <description>JSONTestSuite test case n_structure_open_array_apostrophe</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_open_array_apostrophe.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_object_unclosed_no_value">
      <description>JSONTestSuite test case n_structure_object_unclosed_no_value</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_object_unclosed_no_value.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_0_capital_E">
      <description>JSONTestSuite test case n_number_0_capital_E</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_0_capital_E.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_number_real_capital_e_neg_exp">
      <description>JSONTestSuite test case y_number_real_capital_e_neg_exp</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_real_capital_e_neg_exp.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_incomplete_true">
      <description>JSONTestSuite test case n_incomplete_true</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_incomplete_true.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_array_double_extra_comma">
      <description>JSONTestSuite test case n_array_double_extra_comma</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_double_extra_comma.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_structure_lonely_string">
      <description>JSONTestSuite test case y_structure_lonely_string</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_structure_lonely_string.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_+Inf">
      <description>JSONTestSuite test case n_number_+Inf</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_+Inf.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_hex_2_digits">
      <description>JSONTestSuite test case n_number_hex_2_digits</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_hex_2_digits.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_close_unopened_array">
      <description>JSONTestSuite test case n_structure_close_unopened_array</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_close_unopened_array.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_object_comma_instead_of_colon">
      <description>JSONTestSuite test case n_object_comma_instead_of_colon</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_comma_instead_of_colon.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_open_object_string_with_apostrophes">
      <description>JSONTestSuite test case n_structure_open_object_string_with_apostrophes</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_open_object_string_with_apostrophes.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_number_negative_int">
      <description>JSONTestSuite test case y_number_negative_int</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_negative_int.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="i_string_inverted_surrogates_U+1D11E">
      <description>JSONTestSuite test case i_string_inverted_surrogates_U+1D11E</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_inverted_surrogates_U+1D11E.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_structure_object_with_comment">
      <description>JSONTestSuite test case n_structure_object_with_comment</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_object_with_comment.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_incomplete_surrogate_escape_invalid">
      <description>JSONTestSuite test case n_string_incomplete_surrogate_escape_invalid</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_incomplete_surrogate_escape_invalid.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_string_utf16LE_no_BOM">
      <description>JSONTestSuite test case i_string_utf16LE_no_BOM</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_utf16LE_no_BOM.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="i_string_overlong_sequence_6_bytes_null">
      <description>JSONTestSuite test case i_string_overlong_sequence_6_bytes_null</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_overlong_sequence_6_bytes_null.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_object_trailing_comment_open">
      <description>JSONTestSuite test case n_object_trailing_comment_open</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_trailing_comment_open.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_array_ending_with_newline">
      <description>JSONTestSuite test case y_array_ending_with_newline</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_array_ending_with_newline.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_array_colon_instead_of_comma">
      <description>JSONTestSuite test case n_array_colon_instead_of_comma</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_colon_instead_of_comma.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_object_trailing_comment_slash_open_incomplete">
      <description>JSONTestSuite test case n_object_trailing_comment_slash_open_incomplete</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_trailing_comment_slash_open_incomplete.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_number_simple_real">
      <description>JSONTestSuite test case y_number_simple_real</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_simple_real.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_2.e+3">
      <description>JSONTestSuite test case n_number_2.e+3</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_2.e+3.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_array_unclosed_with_object_inside">
      <description>JSONTestSuite test case n_array_unclosed_with_object_inside</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_unclosed_with_object_inside.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_array_trailing_garbage">
      <description>JSONTestSuite test case n_structure_array_trailing_garbage</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_array_trailing_garbage.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_string_truncated-utf-8">
      <description>JSONTestSuite test case i_string_truncated-utf-8</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_truncated-utf-8.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_string_unicode_U+200B_ZERO_WIDTH_SPACE">
      <description>JSONTestSuite test case y_string_unicode_U+200B_ZERO_WIDTH_SPACE</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_unicode_U+200B_ZERO_WIDTH_SPACE.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_structure_double_array">
      <description>JSONTestSuite test case n_structure_double_array</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_double_array.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_u+2028_line_sep">
      <description>JSONTestSuite test case y_string_u+2028_line_sep</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_u+2028_line_sep.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_neg_int_starting_with_zero">
      <description>JSONTestSuite test case n_number_neg_int_starting_with_zero</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_neg_int_starting_with_zero.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_array_newlines_unclosed">
      <description>JSONTestSuite test case n_array_newlines_unclosed</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_newlines_unclosed.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_structure_lonely_true">
      <description>JSONTestSuite test case y_structure_lonely_true</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_structure_lonely_true.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_object_missing_colon">
      <description>JSONTestSuite test case n_object_missing_colon</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_missing_colon.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_two-byte-utf-8">
      <description>JSONTestSuite test case y_string_two-byte-utf-8</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_two-byte-utf-8.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_unicodeEscapedBackslash">
      <description>JSONTestSuite test case y_string_unicodeEscapedBackslash</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_unicodeEscapedBackslash.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="i_string_overlong_sequence_2_bytes">
      <description>JSONTestSuite test case i_string_overlong_sequence_2_bytes</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_overlong_sequence_2_bytes.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_object_missing_semicolon">
      <description>JSONTestSuite test case n_object_missing_semicolon</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_missing_semicolon.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_object_simple">
      <description>JSONTestSuite test case y_object_simple</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_object_simple.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_unicode_U+2064_invisible_plus">
      <description>JSONTestSuite test case y_string_unicode_U+2064_invisible_plus</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_unicode_U+2064_invisible_plus.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_minus_space_1">
      <description>JSONTestSuite test case n_number_minus_space_1</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_minus_space_1.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_unescaped_crtl_char">
      <description>JSONTestSuite test case n_string_unescaped_crtl_char</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_unescaped_crtl_char.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_escaped_control_character">
      <description>JSONTestSuite test case y_string_escaped_control_character</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_escaped_control_character.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_simple_ascii">
      <description>JSONTestSuite test case y_string_simple_ascii</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_simple_ascii.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_unicode_U+10FFFE_nonchar">
      <description>JSONTestSuite test case y_string_unicode_U+10FFFE_nonchar</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_unicode_U+10FFFE_nonchar.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_structure_open_object">
      <description>JSONTestSuite test case n_structure_open_object</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_open_object.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_utf8">
      <description>JSONTestSuite test case y_string_utf8</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_utf8.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_string_escaped_ctrl_char_tab">
      <description>JSONTestSuite test case n_string_escaped_ctrl_char_tab</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_escaped_ctrl_char_tab.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_number_double_huge_neg_exp">
      <description>JSONTestSuite test case i_number_double_huge_neg_exp</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_number_double_huge_neg_exp.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_number_invalid+-">
      <description>JSONTestSuite test case n_number_invalid+-</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_invalid+-.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_100000_opening_arrays">
      <description>JSONTestSuite test case n_structure_100000_opening_arrays</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_100000_opening_arrays.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_leading_uescaped_thinspace">
      <description>JSONTestSuite test case n_string_leading_uescaped_thinspace</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_leading_uescaped_thinspace.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_0.3e">
      <description>JSONTestSuite test case n_number_0.3e</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_0.3e.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_lone-open-bracket">
      <description>JSONTestSuite test case n_structure_lone-open-bracket</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_lone-open-bracket.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_unescaped_char_delete">
      <description>JSONTestSuite test case y_string_unescaped_char_delete</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_unescaped_char_delete.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_structure_object_followed_by_closing_object">
      <description>JSONTestSuite test case n_structure_object_followed_by_closing_object</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_object_followed_by_closing_object.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_0e+">
      <description>JSONTestSuite test case n_number_0e+</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_0e+.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_unicode-identifier">
      <description>JSONTestSuite test case n_structure_unicode-identifier</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_unicode-identifier.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_1eE2">
      <description>JSONTestSuite test case n_number_1eE2</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_1eE2.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_object_extreme_numbers">
      <description>JSONTestSuite test case y_object_extreme_numbers</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_object_extreme_numbers.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_+1">
      <description>JSONTestSuite test case n_number_+1</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_+1.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_object_long_strings">
      <description>JSONTestSuite test case y_object_long_strings</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_object_long_strings.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_incomplete_null">
      <description>JSONTestSuite test case n_incomplete_null</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_incomplete_null.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_number_negative_zero">
      <description>JSONTestSuite test case y_number_negative_zero</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_negative_zero.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_multidigit_number_then_00">
      <description>JSONTestSuite test case n_multidigit_number_then_00</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_multidigit_number_then_00.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_1_surrogate_then_escape_u">
      <description>JSONTestSuite test case n_string_1_surrogate_then_escape_u</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_1_surrogate_then_escape_u.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_array_with_leading_space">
      <description>JSONTestSuite test case y_array_with_leading_space</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_array_with_leading_space.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_array_double_comma">
      <description>JSONTestSuite test case n_array_double_comma</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_double_comma.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_structure_trailing_newline">
      <description>JSONTestSuite test case y_structure_trailing_newline</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_structure_trailing_newline.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_array_invalid_utf8">
      <description>JSONTestSuite test case n_array_invalid_utf8</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <modified by="Michael Kay, Saxonica" on="2018-09-22" change="change expected error code"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_invalid_utf8.json')</test>
      <result>
         <any-of>
            <error code="FOUT1200"/>
            <error code="FOUT1190"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_object_repeated_null_null">
      <description>JSONTestSuite test case n_object_repeated_null_null</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_repeated_null_null.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_object_bad_value">
      <description>JSONTestSuite test case n_object_bad_value</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_bad_value.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_number_pos_double_huge_exp">
      <description>JSONTestSuite test case i_number_pos_double_huge_exp</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_number_pos_double_huge_exp.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_string_surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF">
      <description>JSONTestSuite test case y_string_surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_2.e-3">
      <description>JSONTestSuite test case n_number_2.e-3</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_2.e-3.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_object_string_unicode">
      <description>JSONTestSuite test case y_object_string_unicode</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_object_string_unicode.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_string_no_quotes_with_bad_escape">
      <description>JSONTestSuite test case n_string_no_quotes_with_bad_escape</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_no_quotes_with_bad_escape.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_neg_with_garbage_at_end">
      <description>JSONTestSuite test case n_number_neg_with_garbage_at_end</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_neg_with_garbage_at_end.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_1_surrogate_then_escape_u1">
      <description>JSONTestSuite test case n_string_1_surrogate_then_escape_u1</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_1_surrogate_then_escape_u1.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_array_spaces_vertical_tab_formfeed">
      <description>JSONTestSuite test case n_array_spaces_vertical_tab_formfeed</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_spaces_vertical_tab_formfeed.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_open_array_object">
      <description>JSONTestSuite test case n_structure_open_array_object</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_open_array_object.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_open_object_open_string">
      <description>JSONTestSuite test case n_structure_open_object_open_string</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_open_object_open_string.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_object_non_string_key_but_huge_number_instead">
      <description>JSONTestSuite test case n_object_non_string_key_but_huge_number_instead</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_non_string_key_but_huge_number_instead.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_number_real_underflow">
      <description>JSONTestSuite test case i_number_real_underflow</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_number_real_underflow.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_object_single_quote">
      <description>JSONTestSuite test case n_object_single_quote</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_single_quote.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_0.3e+">
      <description>JSONTestSuite test case n_number_0.3e+</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_0.3e+.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_real_garbage_after_e">
      <description>JSONTestSuite test case n_number_real_garbage_after_e</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_real_garbage_after_e.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_escaped_backslash_bad">
      <description>JSONTestSuite test case n_string_escaped_backslash_bad</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_escaped_backslash_bad.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_number_0e1">
      <description>JSONTestSuite test case y_number_0e1</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_0e1.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_number_real_pos_exponent">
      <description>JSONTestSuite test case y_number_real_pos_exponent</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_real_pos_exponent.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_double_escape_n">
      <description>JSONTestSuite test case y_string_double_escape_n</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_double_escape_n.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_array_arraysWithSpaces">
      <description>JSONTestSuite test case y_array_arraysWithSpaces</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_array_arraysWithSpaces.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_array_heterogeneous">
      <description>JSONTestSuite test case y_array_heterogeneous</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_array_heterogeneous.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_with_del_character">
      <description>JSONTestSuite test case y_string_with_del_character</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_with_del_character.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_object_with_trailing_garbage">
      <description>JSONTestSuite test case n_object_with_trailing_garbage</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_with_trailing_garbage.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_array_with_several_null">
      <description>JSONTestSuite test case y_array_with_several_null</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_array_with_several_null.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_number_simple_int">
      <description>JSONTestSuite test case y_number_simple_int</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_simple_int.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_expression">
      <description>JSONTestSuite test case n_number_expression</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_expression.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_open_array_string">
      <description>JSONTestSuite test case n_structure_open_array_string</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_open_array_string.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_object_missing_key">
      <description>JSONTestSuite test case n_object_missing_key</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_missing_key.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_1_surrogate_then_escape_u1x">
      <description>JSONTestSuite test case n_string_1_surrogate_then_escape_u1x</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_1_surrogate_then_escape_u1x.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_trailing_%23">
      <description>JSONTestSuite test case n_structure_trailing_%23</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_trailing_%23.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_array_with_extra_array_close">
      <description>JSONTestSuite test case n_structure_array_with_extra_array_close</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_array_with_extra_array_close.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_object_empty_key">
      <description>JSONTestSuite test case y_object_empty_key</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_object_empty_key.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_nonCharacterInUTF-8_U+FFFF">
      <description>JSONTestSuite test case y_string_nonCharacterInUTF-8_U+FFFF</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <modified by="Michael Kay, Saxonica" on="2018-09-22" change="This appears to be valid according to the JSON spec. 
         It contains a character that is not valid in XML, but the json-doc() spec indicates that this is not an error, 
         though the mechanism is describes for handling it is flawed."/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_nonCharacterInUTF-8_U+FFFF.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="i_number_very_big_negative_int">
      <description>JSONTestSuite test case i_number_very_big_negative_int</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_number_very_big_negative_int.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="i_string_invalid_lonely_surrogate">
      <description>JSONTestSuite test case i_string_invalid_lonely_surrogate</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_invalid_lonely_surrogate.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_object_escaped_null_in_key">
      <description>JSONTestSuite test case y_object_escaped_null_in_key</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_object_escaped_null_in_key.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_structure_angle_bracket_.">
      <description>JSONTestSuite test case n_structure_angle_bracket_.</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_angle_bracket_..json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_accepted_surrogate_pairs">
      <description>JSONTestSuite test case y_string_accepted_surrogate_pairs</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_accepted_surrogate_pairs.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="i_structure_500_nested_arrays">
      <description>JSONTestSuite test case i_structure_500_nested_arrays</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_structure_500_nested_arrays.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_number_real_neg_exp">
      <description>JSONTestSuite test case y_number_real_neg_exp</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number_real_neg_exp.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_structure_whitespace_array">
      <description>JSONTestSuite test case y_structure_whitespace_array</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_structure_whitespace_array.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_in_array_with_leading_space">
      <description>JSONTestSuite test case y_string_in_array_with_leading_space</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_in_array_with_leading_space.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_nonCharacterInUTF-8_U+10FFFF">
      <description>JSONTestSuite test case y_string_nonCharacterInUTF-8_U+10FFFF</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_nonCharacterInUTF-8_U+10FFFF.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_object_bracket_key">
      <description>JSONTestSuite test case n_object_bracket_key</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_bracket_key.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_number_neg_int_huge_exp">
      <description>JSONTestSuite test case i_number_neg_int_huge_exp</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_number_neg_int_huge_exp.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_number_NaN">
      <description>JSONTestSuite test case n_number_NaN</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_NaN.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_single_string_no_double_quotes">
      <description>JSONTestSuite test case n_string_single_string_no_double_quotes</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_single_string_no_double_quotes.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_neg_real_without_int_part">
      <description>JSONTestSuite test case n_number_neg_real_without_int_part</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_neg_real_without_int_part.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_unescaped_newline">
      <description>JSONTestSuite test case n_string_unescaped_newline</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_unescaped_newline.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_array_with_trailing_space">
      <description>JSONTestSuite test case y_array_with_trailing_space</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_array_with_trailing_space.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="i_string_not_in_unicode_range">
      <description>JSONTestSuite test case i_string_not_in_unicode_range</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_not_in_unicode_range.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_string_single_quote">
      <description>JSONTestSuite test case n_string_single_quote</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_single_quote.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_1_000">
      <description>JSONTestSuite test case n_number_1_000</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_1_000.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_object_duplicated_key">
      <description>JSONTestSuite test case y_object_duplicated_key</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_object_duplicated_key.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_string_incomplete_escaped_character">
      <description>JSONTestSuite test case n_string_incomplete_escaped_character</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_incomplete_escaped_character.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_object_no-colon">
      <description>JSONTestSuite test case n_object_no-colon</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_no-colon.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_one-byte-utf-8">
      <description>JSONTestSuite test case y_string_one-byte-utf-8</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_one-byte-utf-8.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="y_string_unicode_2">
      <description>JSONTestSuite test case y_string_unicode_2</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_unicode_2.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_object_trailing_comment">
      <description>JSONTestSuite test case n_object_trailing_comment</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_trailing_comment.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_unicode_U+FDD0_nonchar">
      <description>JSONTestSuite test case y_string_unicode_U+FDD0_nonchar</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_unicode_U+FDD0_nonchar.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_incomplete_false">
      <description>JSONTestSuite test case n_incomplete_false</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_incomplete_false.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_null-byte-outside-string">
      <description>JSONTestSuite test case n_structure_null-byte-outside-string</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <modified by="Michael Kay, Saxonica" on="2022-12-16" change="
         Since the second byte of the input is a null byte, the processor may incorrectly infer UTF-16LE encoding,
         and then fail to decode the file, leading to an I/O error (FOUT1200) rather than a parsing error (FOJS0001)"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_null-byte-outside-string.json')</test>
      <result>
         <any-of>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="i_structure_UTF-8_BOM_empty_object">
      <description>JSONTestSuite test case i_structure_UTF-8_BOM_empty_object</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_structure_UTF-8_BOM_empty_object.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_string_nbsp_uescaped">
      <description>JSONTestSuite test case y_string_nbsp_uescaped</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_nbsp_uescaped.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_.-1">
      <description>JSONTestSuite test case n_number_.-1</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_.-1.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_number_with_trailing_garbage">
      <description>JSONTestSuite test case n_structure_number_with_trailing_garbage</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_number_with_trailing_garbage.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_real_without_fractional_part">
      <description>JSONTestSuite test case n_number_real_without_fractional_part</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_real_without_fractional_part.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_string_invalid_utf-8">
      <description>JSONTestSuite test case i_string_invalid_utf-8</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_invalid_utf-8.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="i_string_incomplete_surrogate_pair">
      <description>JSONTestSuite test case i_string_incomplete_surrogate_pair</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_incomplete_surrogate_pair.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_string_invalid_backslash_esc">
      <description>JSONTestSuite test case n_string_invalid_backslash_esc</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_invalid_backslash_esc.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_minus_infinity">
      <description>JSONTestSuite test case n_number_minus_infinity</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_minus_infinity.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_array_unclosed">
      <description>JSONTestSuite test case n_array_unclosed</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_unclosed.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_string_incomplete_surrogate_and_escape_valid">
      <description>JSONTestSuite test case i_string_incomplete_surrogate_and_escape_valid</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_incomplete_surrogate_and_escape_valid.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_array_false">
      <description>JSONTestSuite test case y_array_false</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_array_false.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_real_with_invalid_utf8_after_e">
      <description>JSONTestSuite test case n_number_real_with_invalid_utf8_after_e</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <modified by="Michael Kay, Saxonica" on="2018-09-22" change="change expected error code"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_real_with_invalid_utf8_after_e.json')</test>
      <result>
         <any-of>
            <error code="FOUT1190"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_string_unicode_U+FFFE_nonchar">
      <description>JSONTestSuite test case y_string_unicode_U+FFFE_nonchar</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_unicode_U+FFFE_nonchar.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_structure_open_open">
      <description>JSONTestSuite test case n_structure_open_open</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_open_open.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_1.0e">
      <description>JSONTestSuite test case n_number_1.0e</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_1.0e.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_array_unclosed_trailing_comma">
      <description>JSONTestSuite test case n_array_unclosed_trailing_comma</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_unclosed_trailing_comma.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_array_comma_and_number">
      <description>JSONTestSuite test case n_array_comma_and_number</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_comma_and_number.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_1_surrogate_then_escape">
      <description>JSONTestSuite test case n_string_1_surrogate_then_escape</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_1_surrogate_then_escape.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_unclosed_array_unfinished_true">
      <description>JSONTestSuite test case n_structure_unclosed_array_unfinished_true</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_unclosed_array_unfinished_true.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_escaped_emoji">
      <description>JSONTestSuite test case n_string_escaped_emoji</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_escaped_emoji.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_array_comma_after_close">
      <description>JSONTestSuite test case n_array_comma_after_close</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_comma_after_close.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_reservedCharacterInUTF-8_U+1BFFF">
      <description>JSONTestSuite test case y_string_reservedCharacterInUTF-8_U+1BFFF</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_reservedCharacterInUTF-8_U+1BFFF.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_structure_U+2060_word_joined">
      <description>JSONTestSuite test case n_structure_U+2060_word_joined</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_U+2060_word_joined.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_0.e1">
      <description>JSONTestSuite test case n_number_0.e1</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_0.e1.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_array_unclosed_with_new_lines">
      <description>JSONTestSuite test case n_array_unclosed_with_new_lines</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_unclosed_with_new_lines.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_angle_bracket_null">
      <description>JSONTestSuite test case n_structure_angle_bracket_null</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_angle_bracket_null.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_object_emoji">
      <description>JSONTestSuite test case n_object_emoji</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_emoji.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_object_unterminated-value">
      <description>JSONTestSuite test case n_object_unterminated-value</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_unterminated-value.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_array_with_unclosed_string">
      <description>JSONTestSuite test case n_structure_array_with_unclosed_string</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_array_with_unclosed_string.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_string_u+2029_par_sep">
      <description>JSONTestSuite test case y_string_u+2029_par_sep</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_u+2029_par_sep.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_object_double_colon">
      <description>JSONTestSuite test case n_object_double_colon</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_object_double_colon.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_object_basic">
      <description>JSONTestSuite test case y_object_basic</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_object_basic.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="i_string_lone_second_surrogate">
      <description>JSONTestSuite test case i_string_lone_second_surrogate</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_lone_second_surrogate.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_structure_open_array_open_string">
      <description>JSONTestSuite test case n_structure_open_array_open_string</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_open_array_open_string.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_array_extra_close">
      <description>JSONTestSuite test case n_array_extra_close</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_extra_close.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="i_string_UTF-8_invalid_sequence">
      <description>JSONTestSuite test case i_string_UTF-8_invalid_sequence</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/i_string_UTF-8_invalid_sequence.json')</test>
      <result>
         <any-of>
            <assert>true()</assert>
            <error code="FOJS0001"/>
            <error code="FOUT1200"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_array_inner_array_no_comma">
      <description>JSONTestSuite test case n_array_inner_array_no_comma</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_inner_array_no_comma.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_start_escape_unclosed">
      <description>JSONTestSuite test case n_string_start_escape_unclosed</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_start_escape_unclosed.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_string_invalid-utf-8-in-escape">
      <description>JSONTestSuite test case n_string_invalid-utf-8-in-escape</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <modified by="Michael Kay, Saxonica" on="2018-09-22" change="change expected error code"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_string_invalid-utf-8-in-escape.json')</test>
      <result>
         <any-of>
            <error code="FOUT1200"/>
            <error code="FOUT1190"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="n_structure_open_array_open_object">
      <description>JSONTestSuite test case n_structure_open_array_open_object</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_open_array_open_object.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_hex_1_digit">
      <description>JSONTestSuite test case n_number_hex_1_digit</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_hex_1_digit.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_structure_incomplete_UTF8_BOM">
      <description>JSONTestSuite test case n_structure_incomplete_UTF8_BOM</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <modified by="Michael Kay, Saxonica" on="2018-09-22" change="change expected error code"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_structure_incomplete_UTF8_BOM.json')</test>
      <result>
         <any-of>
            <error code="FOUT1200"/>
            <error code="FOUT1190"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="y_string_in_array">
      <description>JSONTestSuite test case y_string_in_array</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_string_in_array.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_number_-1.0.">
      <description>JSONTestSuite test case n_number_-1.0.</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_-1.0..json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="n_number_0_capital_E+">
      <description>JSONTestSuite test case n_number_0_capital_E+</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_number_0_capital_E+.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   <test-case name="y_number">
      <description>JSONTestSuite test case y_number</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/y_number.json')</test>
      <result>
         <assert>count($result) lt 2</assert>
      </result>
   </test-case>
   <test-case name="n_array_just_comma">
      <description>JSONTestSuite test case n_array_just_comma</description>
      <created by="Michael Kay, Saxonica" on="2018-08-01"/>
      <dependency type="spec" value="XQ31+"/>
      <test>json-doc('JSONTestSuite/test_parsing/n_array_just_comma.json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
</test-set>
