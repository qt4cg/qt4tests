<?xml version="1.0" encoding="UTF-8"?><html xmlns="http://www.w3.org/1999/xhtml"><head><script src="/resources/testharness.js"/>
<script src="/resources/testharnessreport.js"/>
<script src="/common/get-host-info.sub.js"/>
</head><body>

<script>
async_test(t =&gt; {
  const url = new URL("resources/cross-origin-iframe-helper.html?", location.href);
  url.hostname = get_host_info().REMOTE_HOST;
  const iframe = document.createElement("iframe")
  iframe.src = url;
  iframe.name = "windowname";
  document.body.append(iframe);

  url.hash = "#foo";
  const form = document.createElement("form");
  form.action = url;
  form.target = iframe.name;
  document.body.append(form);

  window.onmessage = t.step_func_done(e =&gt; {
    assert_equals(e.data.navigationType, "push", "navigationType");
    assert_true(e.data.cancelable, "cancelable");
    assert_true(e.data.canIntercept, "canIntercept");
    assert_false(e.data.userInitiated, "userInitiated");
    assert_true(e.data.hashChange, "hashChange");
    assert_equals(e.data.formData, null, "formData");
    assert_equals(e.data.destination.url, form.action, "destination.url");
    assert_true(e.data.destination.sameDocument, "destination.sameDocument");
    assert_equals(e.data.destination.key, null, "destination.key");
    assert_equals(e.data.destination.id, null, "destination.id");
    assert_equals(e.data.destination.index, -1, "destination.index");
  });

  navigation.onnavigate = t.unreached_func("onnavigate must not fire in the source window");
  window.onload = t.step_func(() =&gt; form.submit());
}, "submitting a &lt;form&gt; element that navigates same-document targeting a cross-origin window");
</script>
</body></html>