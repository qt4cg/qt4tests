<?xml version="1.0" encoding="UTF-8"?><html xmlns="http://www.w3.org/1999/xhtml"><head><meta content="script-src 'nonce-abc'" http-equiv="Content-Security-Policy"/>
<script nonce="abc" src="/resources/testharness.js"/>
<script nonce="abc" src="/resources/testharnessreport.js"/>
<script nonce="abc">
    var t = async_test("Unnonced scripts generate reports.");
    var events = 0;
    var firstLine = 38;
    var expectations = {}
    expectations[firstLine] = true;
    expectations[firstLine + 3] = true;
    expectations[firstLine + 6] = true;
    expectations[firstLine + 9] = true;
    expectations[firstLine + 12] = true;
    expectations[firstLine + 15] = true;
    expectations[firstLine + 18] = true;
    expectations["/content-security-policy/support/nonce-should-be-blocked.js?1"] = true;
    expectations["/content-security-policy/support/nonce-should-be-blocked.js?2"] = true;
    expectations["/content-security-policy/support/nonce-should-be-blocked.js?3"] = true;
    expectations["/content-security-policy/support/nonce-should-be-blocked.js?4"] = true;
    expectations["/content-security-policy/support/nonce-should-be-blocked.js?5"] = true;

    document.addEventListener('securitypolicyviolation', t.step_func(e =&gt; {
        if (e.lineNumber) {
            // Verify that the line is expected, then clear the expectation:
            assert_true(expectations[e.lineNumber], "Line number: " + e.lineNumber);
            assert_equals(e.blockedURI, "inline");
        } else {
            // Otherwise, verify that the URL is expected, then clear the expectation:
            var url = new URL(e.blockedURI);
            assert_true(expectations[url.pathname + url.search], "URL: " + e.blockedURI);
        }
        events++;
        if (events == 12)
          t.done();
    }));
</script>
<script>
    t.unreached_func("No nonce, no execution.")();
</script>
<script nonce="xyz">
    t.unreached_func("Bad nonce, no execution.")();
</script>
<script>&lt;script nonce="abc"&gt;
    t.unreached_func("'&lt;script' attribute, no execution.")();
</script>
<script attributeU00003Cscript="" nonce="abc">
    t.unreached_func("'attribute&lt;script', no execution.")();
</script>
<script attribute="&lt;script" nonce="abc">
    t.unreached_func("'&lt;script' value, no execution.")();
</script>
<script attribute="value&lt;script" nonce="abc">
    t.unreached_func("'value&lt;script', no execution.")();
</script>
<script attribute="" nonce="abc">
    t.unreached_func("Duplicate attribute, no execution.")();
</script>
<script src="../support/nonce-should-be-blocked.js?1">&lt;script nonce="abc"&gt;</script>
<script attribute="&lt;script" nonce="abc" src="../support/nonce-should-be-blocked.js?2"/>
<script src="../support/nonce-should-be-blocked.js?3">&lt;style nonce="abc"&gt;</script>
<script attribute="&lt;style" nonce="abc" src="../support/nonce-should-be-blocked.js?4"/>
<script attribute="&lt;style" nonce="abc" src="../support/nonce-should-be-blocked.js?5"/>
</head><body/></html>