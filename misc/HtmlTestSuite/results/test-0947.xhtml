<?xml version="1.0" encoding="UTF-8"?><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Test showPicker() called from cross-origin iframe</title>
<script src="/resources/testharness.js"/>
<script src="/resources/testharnessreport.js"/>
<script src="/common/get-host-info.sub.js"/>
</head><body>
<iframe id="iframe1"/>
<iframe id="iframe2"/>
<iframe id="iframe3"/>
<iframe id="iframe4"/>
<script>
function waitForSecurityErrors() {
  return new Promise((resolve) =&gt; {
    window.addEventListener("message", (event) =&gt; resolve(event.data), {
      once: true,
    });
  });
}

promise_test(async (t) =&gt; {
  iframe1.src =
    new URL("resources/", self.location).pathname +
    "show-picker-child-iframe.html";

  // Wait for the iframe to report security errors when calling showPicker().
  const securityErrors = await waitForSecurityErrors();
  assert_equals(
    securityErrors,
    "",
    "In same-origin iframes, showPicker() does not throw a SecurityError."
  );
});

promise_test(async (t) =&gt; {
  iframe2.src =
    get_host_info().HTTP_NOTSAMESITE_ORIGIN +
    new URL("resources/", self.location).pathname +
    "show-picker-child-iframe.html";

  // Wait for the iframe to report security errors when calling showPicker().
  const securityErrors = await waitForSecurityErrors();
  assert_equals(
    securityErrors,
    "button,checkbox,date,datetime-local,email,hidden,image,month,number,password,radio,range,reset,search,submit,tel,text,time,url,week",
    "In cross-origin iframes, showPicker() throws a SecurityError except on file and color."
  );
});

promise_test(async (t) =&gt; {
  iframe3.src =
    new URL("resources/", self.location).pathname +
    "show-picker-child-iframe.html?documentDomain=" + get_host_info().ORIGINAL_HOST;

  // Wait for the iframe to report security errors when calling showPicker().
  const securityErrors = await waitForSecurityErrors();
  assert_equals(
    securityErrors,
    "",
    "In same-origin but cross-origin-domain iframes, showPicker() does not throw a SecurityError."
  );
});

promise_test(async (t) =&gt; {
  document.domain = get_host_info().ORIGINAL_HOST;
  iframe4.src =
    get_host_info().HTTP_REMOTE_ORIGIN +
    new URL("resources/", self.location).pathname +
    "show-picker-child-iframe.html?documentDomain=" + get_host_info().ORIGINAL_HOST;

  // Wait for the iframe to report security errors when calling showPicker().
  const securityErrors = await waitForSecurityErrors();
  assert_equals(
    securityErrors,
    "button,checkbox,date,datetime-local,email,hidden,image,month,number,password,radio,range,reset,search,submit,tel,text,time,url,week",
    "In cross-origin but same-origin-domain iframes, showPicker() throws a SecurityError except on file and color."
  );
});
</script>
</body>
</html>