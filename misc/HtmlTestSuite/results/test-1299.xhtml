<?xml version="1.0" encoding="UTF-8"?><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/>
<meta content="?div" name="variant"/>
<meta content="?span" name="variant"/>
<title>initial selection on focus of contenteditable</title>
<script src="/resources/testharness.js"/>
<script src="/resources/testharnessreport.js"/>
<script>var testsJsLibraryOnly = true</script>
<script src="../../editing/include/tests.js"/>
</head><body>
<script>
"use strict";

(function() {
  const editingHostTagName = document.location.search.substr(1);
  const editor = document.createElement(editingHostTagName);
  editor.style.minHeight = "1em";
  editor.setAttribute("contenteditable", "");
  document.body.insertBefore(editor, document.body.firstChild);
  editor.focus();
  editor.getBoundingClientRect();

  const tests = [
    { description: "empty editor should set focus to start of it",
      content: "{}",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to start of the text node",
      content: "[]abc",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the &lt;br&gt; node",
      content: "{}&lt;br&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the first &lt;br&gt; node",
      content: "{}&lt;br&gt;&lt;br&gt;",
      canTestInInlineEditingHost: true,
    },

    { description: "editor should set selection to start of the text node in the &lt;p&gt; node",
      content: "&lt;p&gt;[]abc&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to start of the first visible character in the text node in the &lt;p&gt; node",
      content: "&lt;p&gt; []abc&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to start of the text node in the &lt;p&gt; node because of preformatted white-space",
      content: "&lt;p style=\"white-space: pre\"&gt;[] abc&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to start of the text node in the &lt;p&gt; node because of preformatted line break",
      content: "&lt;p style=\"white-space: pre\"&gt;[]\nabc&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to before the &lt;br&gt; node in the &lt;p&gt; node",
      content: "&lt;p&gt;{}&lt;br&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to before the first &lt;br&gt; node in the &lt;p&gt; node",
      content: "&lt;p&gt;{}&lt;br&gt;&lt;br&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },

    { description: "editor should set selection to start of the text node in the &lt;span&gt; node",
      content: "&lt;span&gt;[]abc&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the &lt;br&gt; node in the &lt;span&gt; node",
      content: "&lt;span&gt;{}&lt;br&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the first &lt;br&gt; node in the &lt;span&gt; node",
      content: "&lt;span&gt;{}&lt;br&gt;&lt;br&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },

    { description: "editor should set selection to before the empty &lt;span&gt; node",
      content: "{}&lt;span&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the empty &lt;b&gt; node",
      content: "{}&lt;b&gt;&lt;/b&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the empty &lt;i&gt; node",
      content: "{}&lt;i&gt;&lt;/i&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the empty &lt;u&gt; node",
      content: "{}&lt;u&gt;&lt;/u&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the empty &lt;s&gt; node",
      content: "{}&lt;s&gt;&lt;/s&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the empty &lt;code&gt; node",
      content: "{}&lt;code&gt;&lt;/code&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the empty &lt;a&gt; node",
      content: "{}&lt;a href=\"foo.html\"&gt;&lt;/a&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the empty &lt;foobar&gt; node",
      content: "{}&lt;foobar&gt;&lt;/foobar&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the &lt;input&gt; node",
      content: "{}&lt;input&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the &lt;img&gt; node",
      content: "{}&lt;img alt=\"foo\"&gt;",
      canTestInInlineEditingHost: true,
    },

    { description: "editor should set selection to start of the text node in the second &lt;span&gt; node",
      content: "&lt;span&gt;&lt;/span&gt;&lt;span&gt;[]abc&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the &lt;br&gt; node in the second &lt;span&gt; node",
      content: "&lt;span&gt;&lt;/span&gt;&lt;span&gt;{}&lt;br&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to start of the text node in the first &lt;span&gt; node #1",
      content: "&lt;span&gt;[]abc&lt;/span&gt;&lt;span&gt;abc&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to start of the text node in the first &lt;span&gt; node #2",
      content: "&lt;span&gt;[]abc&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the &lt;br&gt; node in the first &lt;span&gt; node #1",
      content: "&lt;span&gt;{}&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the &lt;br&gt; node in the first &lt;span&gt; node #2",
      content: "&lt;span&gt;{}&lt;br&gt;&lt;/span&gt;&lt;span&gt;abc&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },

    { description: "editor should set selection to start of the text node in the second &lt;span&gt; node since the text node in the first &lt;span&gt; node is only whitespaces",
      content: "&lt;span&gt; &lt;/span&gt;&lt;span&gt;[]abc&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the &lt;br&gt; node in the second &lt;span&gt; node since the text node in the first &lt;span&gt; node is only whitespaces",
      content: "&lt;span&gt; &lt;/span&gt;&lt;span&gt;{}&lt;br&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to start of the text node in the second &lt;span&gt; node even if there is a whitespace only text node before the first &lt;span&gt; node",
      content: " &lt;span&gt;&lt;/span&gt;&lt;span&gt;[]abc&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should set selection to before the &lt;br&gt; node in the second &lt;span&gt; node even if there is a whitespace only text node before the first &lt;span&gt; node",
      content: " &lt;span&gt;&lt;/span&gt;&lt;span&gt;{}&lt;br&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },

    { description: "editor should set selection to start of the text node in the second &lt;p&gt; node following the empty &lt;p&gt; node",
      content: "&lt;p&gt;&lt;/p&gt;&lt;p&gt;[]abc&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to start of the text node in the second &lt;p&gt; node following another &lt;p&gt; node containing only a comment node",
      content: "&lt;p&gt;&lt;!-- comment --&gt;&lt;/p&gt;&lt;p&gt;[]abc&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to before the &lt;br&gt; node in the second &lt;p&gt; node",
      content: "&lt;p&gt;&lt;/p&gt;&lt;p&gt;{}&lt;br&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to start of the text node in the first &lt;p&gt; node #1",
      content: "&lt;p&gt;[]abc&lt;/p&gt;&lt;p&gt;abc&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to start of the text node in the first &lt;p&gt; node #2",
      content: "&lt;p&gt;[]abc&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to before the &lt;br&gt; node in the first &lt;p&gt; node #1",
      content: "&lt;p&gt;{}&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to before the &lt;br&gt; node in the first &lt;p&gt; node #2",
      content: "&lt;p&gt;{}&lt;br&gt;&lt;/p&gt;&lt;p&gt;abc&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },

    { description: "editor should set selection to start of the text node in the second &lt;p&gt; node since the text node in the first &lt;p&gt; node is only whitespaces",
      content: "&lt;p&gt; &lt;/p&gt;&lt;p&gt;[]abc&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to start of the text node in the first &lt;p&gt; node whose white-spaces are preformatted",
      content: "&lt;p style=\"white-space: pre\"&gt;[] &lt;/p&gt;&lt;p&gt;abc&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to start of the text node in the first &lt;p&gt; node whose line breaks are preformatted",
      content: "&lt;p style=\"white-space: pre\"&gt;[]\n&lt;/p&gt;&lt;p&gt;abc&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to before the &lt;br&gt; node in the second &lt;p&gt; node since the text node in the first &lt;p&gt; node is only whitespaces",
      content: "&lt;p&gt; &lt;/p&gt;&lt;p&gt;{}&lt;br&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to start of the text node in the second &lt;p&gt; node even if there is a whitespace only text node before the first &lt;p&gt; node",
      content: " &lt;p&gt;&lt;/p&gt;&lt;p&gt;[]abc&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to before the &lt;br&gt; node in the second &lt;p&gt; node even if there is a whitespace only text node before the first &lt;p&gt; node",
      content: " &lt;p&gt;&lt;/p&gt;&lt;p&gt;{}&lt;br&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },

    { description: "editor should set selection to start of the text node in the &lt;span&gt; node in the second &lt;p&gt; node",
      content: "&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[]abc&lt;/span&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to before the &lt;br&gt; node in the &lt;span&gt; node in the second &lt;p&gt; node",
      content: "&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;{}&lt;br&gt;&lt;/span&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to start of the text node in the &lt;span&gt; node in the first &lt;p&gt; node #1",
      content: "&lt;p&gt;&lt;span&gt;[]abc&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;abc&lt;/span&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to start of the text node in the &lt;span&gt; node in the first &lt;p&gt; node #2",
      content: "&lt;p&gt;&lt;span&gt;[]abc&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to before the &lt;br&gt; node in the &lt;span&gt; node in the first &lt;p&gt; node #1",
      content: "&lt;p&gt;&lt;span&gt;{}&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should set selection to before the &lt;br&gt; node in the &lt;span&gt; node in the first &lt;p&gt; node #2",
      content: "&lt;p&gt;&lt;span&gt;{}&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;abc&lt;/span&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },

    { description: "editor should collapse selection before the non-editable &lt;span&gt; node",
      content: "{}&lt;span contenteditable=\"false\"&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection before the non-editable &lt;span&gt; node even if it has a text node",
      content: "{}&lt;span contenteditable=\"false\"&gt;abc&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection before the non-editable &lt;span&gt; node even if it has a &lt;br&gt; node",
      content: "{}&lt;span contenteditable=\"false\"&gt;&lt;br&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },

    { description: "editor should collapse selection before the non-editable empty &lt;span&gt; node followed by a text node",
      content: "{}&lt;span contenteditable=\"false\"&gt;&lt;/span&gt;&lt;span&gt;abc&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection before the non-editable &lt;span&gt; node having a text node and followed by another text node",
      content: "{}&lt;span contenteditable=\"false\"&gt;abc&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection before the non-editable &lt;span&gt; node having a &lt;br&gt; node and followed by a text node",
      content: "{}&lt;span contenteditable=\"false\"&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;abc&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection before the non-editable empty &lt;span&gt; node followed by a &lt;br&gt; node",
      content: "{}&lt;span contenteditable=\"false\"&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection before the non-editable &lt;span&gt; node having text node and followed by a &lt;br&gt; node",
      content: "{}&lt;span contenteditable=\"false\"&gt;abc&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection before the non-editable &lt;span&gt; node having a &lt;br&gt; node and followed by another &lt;br&gt; node",
      content: "{}&lt;span contenteditable=\"false\"&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },

    { description: "editor should collapse selection before the non-editable empty &lt;p&gt; node followed by a text node",
      content: "{}&lt;p contenteditable=\"false\"&gt;&lt;/p&gt;&lt;p&gt;abc&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection before the non-editable &lt;p&gt; node having a text node and followed by another text node",
      content: "{}&lt;p contenteditable=\"false\"&gt;abc&lt;/p&gt;&lt;p&gt;def&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection before the non-editable &lt;p&gt; node having a &lt;br&gt; node and followed by a text node",
      content: "{}&lt;p contenteditable=\"false\"&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;abc&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection before the non-editable empty &lt;p&gt; node followed by a &lt;br&gt; node",
      content: "{}&lt;p contenteditable=\"false\"&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection before the non-editable &lt;p&gt; node having text node and followed by a &lt;br&gt; node",
      content: "{}&lt;p contenteditable=\"false\"&gt;abc&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection before the non-editable &lt;p&gt; node having a &lt;br&gt; node and followed by another &lt;br&gt; node",
      content: "{}&lt;p contenteditable=\"false\"&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },

    { description: "editor should collapse selection to start of itself when there is only empty inline elements before the non-editable node before first editable text node",
      content: "{}&lt;span&gt;&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;&lt;/span&gt;&lt;span&gt;abc&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection to start of itself when there is only empty inline elements before the non-editable node having a text node before first editable text node",
      content: "{}&lt;span&gt;&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;abc&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection to start of itself when there is only empty inline elements before the non-editable node having a &lt;br&gt; node before first editable text node",
      content: "{}&lt;span&gt;&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;abc&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection to start of itself when there is only empty inline elements before the non-editable node before first editable &lt;br&gt; node",
      content: "{}&lt;span&gt;&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection to start of itself when there is only empty inline elements before the non-editable node having a text node before first editable &lt;br&gt; node",
      content: "{}&lt;span&gt;&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;abc&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection to start of itself when there is only empty inline elements before the non-editable node having a &lt;br&gt; node before first editable &lt;br&gt; node",
      content: "{}&lt;span&gt;&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },

    { description: "editor should collapse selection to start of the first dive element when there is only empty inline elements before the non-editable node before first editable text node",
      content: "&lt;div&gt;{}&lt;span&gt;&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;&lt;/span&gt;&lt;span&gt;abc&lt;/span&gt;&lt;/div&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection to start of the first dive element when there is only empty inline elements before the non-editable node having a text node before first editable text node",
      content: "&lt;div&gt;{}&lt;span&gt;&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;abc&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;/div&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection to start of the first dive element when there is only empty inline elements before the non-editable node having a &lt;br&gt; node before first editable text node",
      content: "&lt;div&gt;{}&lt;span&gt;&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;abc&lt;/span&gt;&lt;/div&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection to start of the first dive element when there is only empty inline elements before the non-editable node before first editable &lt;br&gt; node",
      content: "&lt;div&gt;{}&lt;span&gt;&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection to start of the first dive element when there is only empty inline elements before the non-editable node having a text node before first editable &lt;br&gt; node",
      content: "&lt;div&gt;{}&lt;span&gt;&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;abc&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection to start of the first dive element when there is only empty inline elements before the non-editable node having a &lt;br&gt; node before first editable &lt;br&gt; node",
      content: "&lt;div&gt;{}&lt;span&gt;&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;",
      canTestInInlineEditingHost: false,
    },

    { description: "editor should collapse selection to the first editable text node in the first &lt;span&gt; node even if followed by a non-editable node",
      content: "&lt;span&gt;[]abc&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection to the first editable text node in the first &lt;span&gt; node even if followed by a non-editable node having another text node",
      content: "&lt;span&gt;[]abc&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;def&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection to the first editable text node in the first &lt;span&gt; node even if followed by a non-editable node having a &lt;br&gt; node",
      content: "&lt;span&gt;[]abc&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;&lt;br&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection to the first editable &lt;br&gt; node in the first &lt;span&gt; node even if followed by a non-editable node",
      content: "&lt;span&gt;{}&lt;br&gt;&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection to the first editable &lt;br&gt; node in the first &lt;span&gt; node even if followed by a non-editable node having a text node",
      content: "&lt;span&gt;{}&lt;br&gt;&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;abc&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection to the first editable &lt;br&gt; node in the first &lt;span&gt; node even if followed by a non-editable node having a &lt;br&gt; node",
      content: "&lt;span&gt;{}&lt;br&gt;&lt;/span&gt;&lt;span contenteditable=\"false\"&gt;&lt;br&gt;&lt;/span&gt;",
      canTestInInlineEditingHost: true,
    },

    { description: "editor should collapse selection to the first editable text node in the first &lt;p&gt; node even if followed by a non-editable node",
      content: "&lt;p&gt;[]abc&lt;/p&gt;&lt;p contenteditable=\"false\"&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection to the first editable text node in the first &lt;p&gt; node even if followed by a non-editable node having another text node",
      content: "&lt;p&gt;[]abc&lt;/p&gt;&lt;p contenteditable=\"false\"&gt;def&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection to the first editable text node in the first &lt;p&gt; node even if followed by a non-editable node having a &lt;br&gt; node",
      content: "&lt;p&gt;[]abc&lt;/p&gt;&lt;p contenteditable=\"false\"&gt;&lt;br&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection to the first editable &lt;br&gt; node in the first &lt;p&gt; node even if followed by a non-editable node",
      content: "&lt;p&gt;{}&lt;br&gt;&lt;/p&gt;&lt;p contenteditable=\"false\"&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection to the first editable &lt;br&gt; node in the first &lt;p&gt; node even if followed by a non-editable node having a text node",
      content: "&lt;p&gt;{}&lt;br&gt;&lt;/p&gt;&lt;p contenteditable=\"false\"&gt;abc&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection to the first editable &lt;br&gt; node in the first &lt;p&gt; node even if followed by a non-editable node having a &lt;br&gt; node",
      content: "&lt;p&gt;{}&lt;br&gt;&lt;/p&gt;&lt;p contenteditable=\"false\"&gt;&lt;br&gt;&lt;/p&gt;",
      canTestInInlineEditingHost: false,
    },

    { description: "editor should collapse selection to start of itself if first content is an input element",
      content: "{}&lt;input&gt;abc",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection to start of itself if first content is an hr element",
      content: "{}&lt;hr&gt;abc",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection to start of itself if first content is an textarea element",
      content: "{}&lt;textarea&gt;abc&lt;/textarea&gt;def",
      canTestInInlineEditingHost: true,
    },
    { description: "editor should collapse selection to the input element",
      content: "&lt;div&gt;{}&lt;input&gt;abc&lt;/div&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection to the hr element",
      content: "&lt;div&gt;{}&lt;hr&gt;abc&lt;/div&gt;",
      canTestInInlineEditingHost: false,
    },
    { description: "editor should collapse selection to the textarea element",
      content: "&lt;div&gt;{}&lt;textarea&gt;abc&lt;/textarea&gt;def&lt;/div&gt;",
      canTestInInlineEditingHost: false,
    },
  ];

  const isInlineEditingHost = editingHostTagName == "span";

  const selection = document.getSelection();
  for (const testData of tests) {
    if (isInlineEditingHost &amp;&amp; !testData.canTestInInlineEditingHost) {
      continue;
    }
    test(function() {
      editor.blur();
      selection.removeAllRanges();
      editor.innerHTML = testData.content.replace(/[{}\[\]]/g, "");
      editor.focus();
      editor.getBoundingClientRect();

      assert_equals(selection.rangeCount, 1, "Only one caret should be in the editor");
      if (selection.rangeCount) {
        addBrackets(selection.getRangeAt(0));
        assert_equals(editor.innerHTML, testData.content);
      }
    }, testData.description);
  }

  test(function() {
    // Check if selection is initialized after temporarily blurred.
    editor.innerHTML =
      `&lt;${editingHostTagName}&gt;abc&lt;/${editingHostTagName}&gt;&lt;${editingHostTagName}&gt;def&lt;/${editingHostTagName}&gt;`;
    editor.focus();
    // Move selection to the second paragraph.
    selection.collapse(editor.firstChild.nextSibling.firstChild);
    // Reset focus.
    editor.blur();
    editor.focus();
    // Then, selection should still be in the second paragraph.
    assert_equals(selection.rangeCount, 1, "Only one caret should be in the editor");
    if (selection.rangeCount) {
      addBrackets(selection.getRangeAt(0));
      assert_equals(
        editor.innerHTML,
        `&lt;${editingHostTagName}&gt;abc&lt;/${editingHostTagName}&gt;&lt;${editingHostTagName}&gt;[]def&lt;/${editingHostTagName}&gt;`
      );
    }
  }, "editor shouldn't reset selection when it gets focus again");
})();
</script>
</body></html>