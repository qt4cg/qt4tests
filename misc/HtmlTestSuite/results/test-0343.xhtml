<?xml version="1.0" encoding="UTF-8"?><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/>
<title>'fill-opacity' property</title>
<link href="https://drafts.css-houdini.org/css-typed-om-1/#dom-stylepropertymap-get" rel="help"/>
<link href="https://drafts.css-houdini.org/css-typed-om-1/#dom-stylepropertymap-set" rel="help"/>
<link href="https://drafts.css-houdini.org/css-typed-om-1/#property-stle-value-normalization" rel="help"/>
<script src="/resources/testharness.js"/>
<script src="/resources/testharnessreport.js"/>
<script src="../../resources/testhelper.js"/>
<script src="resources/testsuite.js"/>
</head><body>
<div id="log"/>
<script>
'use strict';

function assert_is_equal_with_clamping_number(input, result) {
  const number = input.to('number');

  if (number.value &lt; 0)
    assert_style_value_equals(result, new CSSUnitValue(0, 'number'));
  else if (number.value &gt; 1)
    assert_style_value_equals(result, new CSSUnitValue(1, 'number'));
  else
    assert_style_value_equals(result, input);
}

function assert_is_equal_with_clamping_percentage(input, result) {
  const number = input.to('percent');
  const value = number.value / 100.;

  if (value &lt; 0)
    assert_style_value_equals(result, new CSSUnitValue(0, 'number'));
  else if (value &gt; 1)
    assert_style_value_equals(result, new CSSUnitValue(1, 'number'));
  else
    assert_style_value_equals(result, new CSSUnitValue(value, 'number'));
}

runPropertyTests('fill-opacity', [
  {
    syntax: '&lt;number&gt;',
    computed: assert_is_equal_with_clamping_number
  },
  {
    syntax: '&lt;percentage&gt;',
    computed: assert_is_equal_with_clamping_percentage
  }
]);

</script>
</body></html>