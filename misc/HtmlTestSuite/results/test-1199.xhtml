<?xml version="1.0" encoding="UTF-8"?><html xmlns="http://www.w3.org/1999/xhtml"><head><script src="/resources/testharness.js"/>
<script src="/resources/testharnessreport.js"/>
<script src="/speculation-rules/prerender/resources/utils.js"/>
<script src="/speculation-rules/prerender/resources/deferred-promise-utils.js"/>
</head><body><audio autoplay="" id="audio" loop=""/>
<video autoplay="" id="video" type="video/mp4"/>
<script>
const params = new URLSearchParams(location.search);
// The main test page (restriction-media-auto-play-attribute.html) loads the
// initiator page, then the initiator page will prerender itself with the
// `prerendering` parameter.
const isPrerendering = params.has('prerendering');

if (!isPrerendering) {
  loadInitiatorPage();
} else {
  const mediaType = params.get('type');
  const media = document.getElementById(mediaType);
  media.src = "./bear-av1-opus.mp4";

  const prerenderEventCollector = new PrerenderEventCollector();
  const promise = new Promise((resolve, reject) =&gt; {
    media.onloadedmetadata = () =&gt; {
      prerenderEventCollector.addEvent(
          'fired loadedmetadata event after prerendering is activated');
      resolve();
    };
    media.onloadstart = () =&gt; {
      // Wait some time to give the test a chance to load the data and fail the
      // test.
      setTimeout(() =&gt; {
        prerenderEventCollector.start(promise, 'Autoplay');
      }, 100);
    };
    media.onerror = reject;
  });

}
</script>
</body></html>